<?xml version="1.0" encoding="UTF-8"?>
<!-- 
   Copyright 2005 The Apache Software Foundation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<!DOCTYPE server>

<!-- ===================================================================== -->
<!--                                                                       -->
<!--  JBoss Server Configuration                                           -->
<!--                                                                       -->
<!-- ===================================================================== -->

<server>

  <!-- Load all jars from the JBOSS_DIST/server/<config>/lib directory. This
    can be restricted to specific jars by specifying them in the archives
    attribute.
   -->
  <classpath codebase="lib" archives="*"/>

  <!-- ==================================================================== -->
  <!-- PropertyEditors and System Properties                                -->
  <!-- ==================================================================== -->
  <mbean code="org.jboss.varia.property.PropertyEditorManagerService"
    name="jboss:type=Service,name=BootstrapEditors">
    <!-- Preload all custom editors for VMs that don't use the thread
         context class loader when searching for PropertyEditors
    -->
    <attribute name="BootstrapEditors">
       java.math.BigDecimal=org.jboss.util.propertyeditor.BigDecimalEditor
       java.lang.Boolean=org.jboss.util.propertyeditor.BooleanEditor
       java.lang.Class=org.jboss.util.propertyeditor.ClassEditor
       java.util.Date=org.jboss.util.propertyeditor.DateEditor
       java.io.File=org.jboss.util.propertyeditor.FileEditor
       java.net.InetAddress=org.jboss.util.propertyeditor.InetAddressEditor
       java.lang.Integer=org.jboss.util.propertyeditor.IntegerEditor
       javax.management.ObjectName=org.jboss.util.propertyeditor.ObjectNameEditor
       java.util.Properties=org.jboss.util.propertyeditor.PropertiesEditor
       [Ljava.lang.String;=org.jboss.util.propertyeditor.StringArrayEditor
       java.net.URL=org.jboss.util.propertyeditor.URLEditor
    </attribute>
  </mbean>
  <mbean code="org.jboss.varia.property.SystemPropertiesService"
    name="jboss:type=Service,name=SystemProperties">
    <!-- The invokerServletPath property gives the public URL to the
      org.jboss.invocation.http.servlet.InvokerServlet used by the
      HTTP proxy for RMI/HTTP. This is only needed if the http-invoker.sar
      is deployed.
    -->
    <attribute name="Properties">
      invokerServletPath=http://localhost:8080/invoker/JMXInvokerServlet
    </attribute>
    <!-- Load properties from each of the given comma seperated URLs
    <attribute name="URLList">
      http://somehost/some-location.properties,
      ./conf/somelocal.properties
    </attribute>
    -->
  </mbean>

  <!-- ==================================================================== -->
  <!-- Log4j Initialization                                                 -->
  <!-- ==================================================================== -->
  <mbean code="org.jboss.logging.Log4jService"
    name="jboss.system:type=Log4jService,service=Logging">
    <attribute name="ConfigurationURL">resource:log4j.xml</attribute>
  </mbean>

  <!-- ==================================================================== -->
  <!-- Class Loading                                                        -->
  <!-- ==================================================================== -->

  <mbean code="org.jboss.web.WebService"
	 name="jboss:service=Webserver">
    <attribute name="Port">8083</attribute>
    <!-- Should resources and non-EJB classes be downloadable -->
    <attribute name="DownloadServerClasses">true</attribute>
  </mbean>

  <!-- ==================================================================== -->
  <!-- JSR-77 Single JBoss Server Management Domain                         -->
  <!-- ==================================================================== -->

  <mbean code="org.jboss.management.j2ee.SingleJBossServerManagement"
	 name="jboss.management.single:j2eeType=J2EEDomain,name=Manager" >
  </mbean>

  <!-- ==================================================================== -->
  <!-- JNDI                                                                 -->
  <!-- ==================================================================== -->

  <mbean code="org.jboss.naming.NamingService"
	 name="jboss:service=Naming">
    <!-- The listening port for the bootstrap JNP service. Set this to -1
      to run the NamingService without the JNP invoker listening port.
    -->
    <attribute name="Port">1099</attribute>
  </mbean>
  <mbean code="org.jboss.naming.JNDIView" 
	 name="jboss:service=JNDIView"/>

  <!-- ==================================================================== -->
  <!-- Security                                                             -->
  <!-- ==================================================================== -->

  <mbean code="org.jboss.security.plugins.SecurityConfig"
	 name="jboss.security:name=SecurityConfig">
    <attribute name="LoginConfig">jboss.security:service=XMLLoginConfig</attribute>
  </mbean>
  <mbean code="org.jboss.security.auth.login.XMLLoginConfig"
	 name="jboss.security:service=XMLLoginConfig">
    <attribute name="ConfigResource">login-config.xml</attribute>
  </mbean>

  <!-- JAAS security manager and realm mapping -->
  <mbean code="org.jboss.security.plugins.JaasSecurityManagerService"
	 name="jboss.security:service=JaasSecurityManager">
    <attribute name="SecurityManagerClassName">
      org.jboss.security.plugins.JaasSecurityManager
    </attribute>
  </mbean>

  <!-- ==================================================================== -->
  <!-- Transactions                                                         -->
  <!-- ==================================================================== -->

  <mbean code="org.jboss.tm.XidFactory" 
	 name="jboss:service=XidFactory">
  </mbean>
 
  <mbean code="org.jboss.tm.TransactionManagerService" 
	 name="jboss:service=TransactionManager">
    <attribute name="TransactionTimeout">300</attribute>
    <depends optional-attribute-name="XidFactory">jboss:service=XidFactory</depends>
  </mbean>

  <!-- 
     | Uncomment to use Tyrex (tyrex.exolab.org) transaction manager plugin
     | instead of the org.jboss.tm.TransactionManagerService and comment out
     | the TransactionManagerService above.
     | Make sure you have Xerces in lib/. At the moment JBoss does not
     | ship Xerces as part of distribution. Version 1.x seems to work fine,
     | though 2.x should as well, use whichever you like.
     |
  <mbean code="org.jboss.tm.plugins.tyrex.TransactionManagerService"
         name="jboss:service=TransactionManager">
        <attribute name="ConfigFileName">../conf/default/domain.xml</attribute>
  </mbean>
  -->

  <mbean code="org.jboss.tm.usertx.server.ClientUserTransactionService"
	 name="jboss:service=ClientUserTransaction">
  </mbean>

  <!-- The CachedConnectionManager is used partly to relay started UserTransactions to 
    open connections so they may be enrolled in the new tx-->
  <mbean code="org.jboss.resource.connectionmanager.CachedConnectionManager" name="jboss.jca:service=CachedConnectionManager">
  </mbean>


  <!-- ==================================================================== -->
  <!-- The deployers...                                                     -->
  <!-- ==================================================================== -->

  <!-- Main Deployer and SARDeployer are provided by main -->

  <!-- EJB deployer, remove to disable EJB behavior-->
  <mbean code="org.jboss.ejb.EJBDeployer" name="jboss.ejb:service=EJBDeployer">
    <attribute name="VerifyDeployments">true</attribute>
    <attribute name="ValidateDTDs">false</attribute>
    <attribute name="MetricsEnabled">false</attribute>
    <attribute name="VerifierVerbose">true</attribute>
    <!-- Add a dependency on the JMS provider(jms-service.xml) for MDBs. If
      you are not using MDBs and JMS remove these.
    -->
    <depends>jboss.mq:service=JMSProviderLoader,name=JBossMQProvider</depends>
    <depends>jboss.mq:service=ServerSessionPoolMBean,name=StdJMSPool</depends>
  </mbean>

  <!-- EAR deployer -->
  <mbean code="org.jboss.deployment.EARDeployer" name="jboss.j2ee:service=EARDeployer">
  </mbean>
  
  <!-- WAR Deployer is provided by tomcat or jetty -->
  <!-- RAR Deployer is provided by the rar.sar package -->


  <!-- ==================================================================== -->
  <!-- JBoss Server Management                                              -->
  <!-- ==================================================================== -->

  <!-- AS Temporary not available
  <mbean code="org.jboss.management.ServerDataCollector"
         name="jboss.management:service=Collector">
    <attribute name="RefreshSleep">5000</attribute>
  </mbean>
  -->

  <!-- ==================================================================== -->
  <!-- Monitoring and Management                                            -->
  <!-- ==================================================================== -->

  <!-- Uncomment to enable JMX monitoring of the bean cache
  <mbean code="org.jboss.monitor.BeanCacheMonitor" 
         name="jboss.monitor:name=BeanCacheMonitor"/>
  -->

  <!-- Uncomment to enable JMX monitoring of the entity bean locking
  <mbean code="org.jboss.monitor.EntityLockMonitor" 
         name="jboss.monitor:name=EntityLockMonitor"/>
  -->

  

  <!-- ==================================================================== -->
  <!-- Invokers to the JMX node                                             -->
  <!-- ==================================================================== -->

  <!-- RMI/JRMP invoker -->
  <mbean code="org.jboss.invocation.jrmp.server.JRMPInvoker" 
         name="jboss:service=invoker,type=jrmp">
    <attribute name="RMIObjectPort">4444</attribute>
    <!--
    <attribute name="RMIClientSocketFactory">custom</attribute>
    <attribute name="RMIServerSocketFactory">custom</attribute>
    <attribute name="RMIServerSocketAddr">custom</attribute>
    -->
  </mbean>
  
  <mbean code="org.jboss.invocation.pooled.server.PooledInvoker" 
         name="jboss:service=invoker,type=pooled">
  </mbean>

  <mbean code="org.jboss.invocation.local.LocalInvoker" 
         name="jboss:service=invoker,type=local">
  </mbean>

  <!-- ==================================================================== -->
  <!-- Deployment Scanning                                                  -->
  <!-- ==================================================================== -->

  <!-- Uncomment to enable caching of deployment units
  <mbean code="org.jboss.deployment.cache.FileDeploymentStore"
	 name="jboss.deployment:type=DeploymentStore,flavor=File">
    <attribute name="DirectoryName">data/deployment-cache</attribute>
  </mbean>

  <mbean code="org.jboss.deployment.cache.DeploymentCache"
	 name="jboss.deployment:type=DeploymentCache">
    <depends optional-attribute-name="Deployer">jboss.system:service=MainDeployer</depends>
    <depends optional-attribute-name="Store">jboss.deployment:type=DeploymentStore,flavor=File</depends>
  </mbean>
  -->

  <!-- An mbean for hot deployment/undeployment of archives.
  -->
  <mbean code="org.jboss.deployment.scanner.URLDeploymentScanner"
	 name="jboss.deployment:type=DeploymentScanner,flavor=URL">

    <!-- Uncomment (and comment/remove version below) to enable usage of the
      DeploymentCache
    <depends optional-attribute-name="Deployer">jboss.deployment:type=DeploymentCache</depends>
    -->
    <depends optional-attribute-name="Deployer">jboss.system:service=MainDeployer</depends>

    <!-- The URLComparator can be used to specify a deployment ordering
         for deployments found in a scanned directory.  The class specified
         must be an implementation of java.util.Comparator, it must be able
         to compare two URL objects, and it must have a no-arg constructor.
         Two deployment comparators are shipped with JBoss:
           - org.jboss.deployment.DeploymentSorter 
             Sorts by file extension, as follows:
               "sar", "service.xml", "rar", "jar", "war", "wsr", "ear", "zip", 
               "*"
           - org.jboss.deployment.scanner.PrefixDeploymentSorter
             If the name portion of the url begins with 1 or more digits, those 
             digits are converted to an int (ignoring leading zeroes), and 
             files are deployed in that order.  Files that do not start with 
             any digits will be deployed first, and they will be sorted by
             extension as above with DeploymentSorter.
    -->
    <attribute name="URLComparator">org.jboss.deployment.DeploymentSorter</attribute>
    <!--
    <attribute name="URLComparator">org.jboss.deployment.scanner.PrefixDeploymentSorter</attribute>
    -->

    <!-- The Filter specifies a java.io.FileFilter for scanned
         directories.  Any file not accepted by this filter will not be
         deployed.  The org.jboss.deployment.scanner.DeploymentFilter 
         rejects the following patterns:
             "#*", "%*", ",*", ".*", "_$*", "*#", "*$", "*%", "*.BAK", 
             "*.old", "*.orig", "*.rej", "*.bak", "*,v", "*~", ".make.state", 
             ".nse_depinfo", "CVS", "CVS.admin", "RCS", "RCSLOG", "SCCS", 
             "TAGS", "core", "tags"
    -->
    <attribute name="Filter">org.jboss.deployment.scanner.DeploymentFilter</attribute>

    <attribute name="ScanPeriod">5000</attribute>

    <!-- URLs are comma seperated and unprefixed arguments are considered
       file URLs and resolve relative to server home(JBOSS_DIST/server/default)
       unless the given path is absolute. Any referenced directories cannot
       be unpackaged archives, use the parent directory of the unpacked
       archive.
     -->
    <attribute name="URLs">
       ./deploy
    </attribute>
  </mbean>

  <!--  An alternate hot deployer mbean. Use URLDirectoryScanner if you need to
    specify which urls are directories to scan, and which are urls to be
    deployed directly. URLDeploymentScanner assumes that all directories are to
    be scanned, which can cause problems if directory referred to in the
    deploy attribute is an exploded archive.
  <mbean code="org.jboss.deployment.scanner.URLDirectoryScanner"
       name="jboss.deployment:type=DeploymentScanner,flavor=URL">

    <depends optional-attribute-name="Deployer">jboss.system:service=MainDeployer</depends>
    <attribute name="URLComparator">org.jboss.deployment.DeploymentSorter</attribute>
    <attribute name="Filter">org.jboss.deployment.scanner.DeploymentFilter</attribute>
    <attribute name="ScanPeriod">5000</attribute>
    /* Each entry specifies either a dir (directory to be scanned),
      or url (url to be deployed). Like the URLs for the DeploymentScanner
      above, a file: protocol will be assumed if not specified otherwise.
    */
    <attribute name="URLs">
        <urls>
            <dir name="./deploy" />
            <url name="./deploy/examples/myapp.ear" />
            <dir name="./deploy/examples" />
            <url name="http://www.test.com/samples/myapp.ear" />
        </urls>
    </attribute>
  </mbean>
  -->

</server>
