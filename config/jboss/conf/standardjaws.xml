<?xml version="1.0" encoding="UTF-8"?>
<!-- 
   Copyright 2005 The Apache Software Foundation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<!DOCTYPE jbosscmp-jdbc PUBLIC
    "-//JBoss//DTD JBOSSCMP-JDBC 3.0//EN"
    "http://www.jboss.org/j2ee/dtd/jbosscmp-jdbc_3_0.dtd">

<!-- ===================================================================== -->
<!--                                                                       -->
<!--  Standard Jaws Configuration                                          -->
<!--                                                                       -->
<!-- ===================================================================== -->


<jaws>
   <datasource>java:/DefaultDS</datasource>
   <type-mapping>Hypersonic SQL</type-mapping>
   <debug>false</debug>

   <default-entity>
      <create-table>true</create-table>
      <remove-table>false</remove-table>
      <tuned-updates>true</tuned-updates>
      <read-only>false</read-only>
      <time-out>300</time-out>
      <row-locking>false</row-locking>
      <read-ahead>false</read-ahead>
   </default-entity>

   <type-mappings>
      <type-mapping-definition>
	 <name>InterBase</name>
	 <mapping>
	    <java-type>java.lang.Boolean</java-type>
	    <jdbc-type>BIT</jdbc-type>
	    <sql-type>SMALLINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Byte</java-type>
	    <jdbc-type>TINYINT</jdbc-type>
	    <sql-type>SMALLINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Short</java-type>
	    <jdbc-type>SMALLINT</jdbc-type>
	    <sql-type>SMALLINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Integer</java-type>
	    <jdbc-type>INTEGER</jdbc-type>
	    <sql-type>INTEGER</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Long</java-type>
	    <jdbc-type>BIGINT</jdbc-type>
	    <sql-type>NUMERIC(18,0)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Float</java-type>
	    <jdbc-type>REAL</jdbc-type>
	    <sql-type>FLOAT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Double</java-type>
	    <jdbc-type>DOUBLE</jdbc-type>
	    <sql-type>DOUBLE PRECISION</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Character</java-type>
	    <jdbc-type>CHAR</jdbc-type>
	    <sql-type>CHAR</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.String</java-type>
	    <jdbc-type>VARCHAR</jdbc-type>
	    <sql-type>VARCHAR(64)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Date</java-type>
	    <jdbc-type>DATE</jdbc-type>
	    <sql-type>DATE</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Time</java-type>
	    <jdbc-type>TIME</jdbc-type>
	    <sql-type>TIME</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Timestamp</java-type>
	    <jdbc-type>TIMESTAMP</jdbc-type>
	    <sql-type>TIMESTAMP</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Object</java-type>
	    <jdbc-type>JAVA_OBJECT</jdbc-type>
	    <sql-type>VARCHAR(2000)</sql-type>
	 </mapping>
      </type-mapping-definition>

      <type-mapping-definition>
	 <name>DB2</name>
	 <mapping>
	    <java-type>java.lang.Boolean</java-type>
	    <jdbc-type>BIT</jdbc-type>
	    <sql-type>SMALLINT</sql-type>
	 </mapping>
	 <!--  DB2 does not appear to support columns of type "byte"
	 Regrettably, this means they'll be serialized.
      <mapping>
      <java-type>java.lang.Byte</java-type>
      <jdbc-type>CHAR</jdbc-type>
      <sql-type>CHAR(1) FOR BIT DATA</sql-type>
      </mapping>
	 -->
	 <mapping>
	    <java-type>java.lang.Short</java-type>
	    <jdbc-type>SMALLINT</jdbc-type>
	    <sql-type>SMALLINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Integer</java-type>
	    <jdbc-type>INTEGER</jdbc-type>
	    <sql-type>INTEGER</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Long</java-type>
	    <jdbc-type>BIGINT</jdbc-type>
	    <sql-type>BIGINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Float</java-type>
	    <jdbc-type>REAL</jdbc-type>
	    <sql-type>REAL</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Double</java-type>
	    <jdbc-type>DOUBLE</jdbc-type>
	    <sql-type>DOUBLE</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Character</java-type>
	    <jdbc-type>CHAR</jdbc-type>
	    <sql-type>CHAR</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.String</java-type>
	    <jdbc-type>VARCHAR</jdbc-type>
	    <sql-type>VARCHAR(254)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Date</java-type>
	    <jdbc-type>DATE</jdbc-type>
	    <sql-type>DATE</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Time</java-type>
	    <jdbc-type>TIME</jdbc-type>
	    <sql-type>TIME</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Timestamp</java-type>
	    <jdbc-type>TIMESTAMP</jdbc-type>
	    <sql-type>TIMESTAMP</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Object</java-type>
	    <jdbc-type>JAVA_OBJECT</jdbc-type>
	    <sql-type>BLOB(2000)</sql-type>
	 </mapping>
      </type-mapping-definition>

      <type-mapping-definition>
	 <name>Oracle8</name>
	 <mapping>
	    <java-type>java.lang.Boolean</java-type>
	    <jdbc-type>BIT</jdbc-type>
	    <sql-type>NUMBER(1)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Byte</java-type>
	    <jdbc-type>NUMERIC</jdbc-type>
	    <sql-type>NUMBER(3)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Short</java-type>
	    <jdbc-type>NUMERIC</jdbc-type>
	    <sql-type>NUMBER(5)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Integer</java-type>
	    <jdbc-type>INTEGER</jdbc-type>
	    <sql-type>NUMBER(10)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Long</java-type>
	    <jdbc-type>BIGINT</jdbc-type>
	    <sql-type>NUMBER(19)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Float</java-type>
	    <jdbc-type>REAL</jdbc-type>
	    <sql-type>NUMBER(38,7)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.math.BigDecimal</java-type>
	    <jdbc-type>DECIMAL</jdbc-type>
	    <sql-type>NUMBER(38,15)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Double</java-type>
	    <jdbc-type>DOUBLE</jdbc-type>
	    <sql-type>NUMBER(38,15)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Character</java-type>
	    <jdbc-type>CHAR</jdbc-type>
	    <sql-type>CHAR</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.String</java-type>
	    <jdbc-type>VARCHAR</jdbc-type>
	    <sql-type>VARCHAR2(255)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Date</java-type>
	    <jdbc-type>DATE</jdbc-type>
	    <sql-type>DATE</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Time</java-type>
	    <jdbc-type>TIME</jdbc-type>
	    <sql-type>DATE</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Timestamp</java-type>
	    <jdbc-type>TIMESTAMP</jdbc-type>
	    <sql-type>DATE</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Object</java-type>
	    <jdbc-type>BLOB</jdbc-type>
	    <sql-type>BLOB</sql-type>
	    <!-- Change this from BLOB to RAW(255) if you know your
	    serialized object will be <= 255 bytes -->
	 </mapping>
      </type-mapping-definition>

      <type-mapping-definition>
	 <name>Oracle7</name>
	 <mapping>
	    <java-type>java.lang.Boolean</java-type>
	    <jdbc-type>BIT</jdbc-type>
	    <sql-type>NUMBER(1)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Byte</java-type>
	    <jdbc-type>NUMERIC</jdbc-type>
	    <sql-type>NUMBER(3)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Short</java-type>
	    <jdbc-type>NUMERIC</jdbc-type>
	    <sql-type>NUMBER(5)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Integer</java-type>
	    <jdbc-type>INTEGER</jdbc-type>
	    <sql-type>NUMBER(10)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Long</java-type>
	    <jdbc-type>BIGINT</jdbc-type>
	    <sql-type>NUMBER(19)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Float</java-type>
	    <jdbc-type>REAL</jdbc-type>
	    <sql-type>NUMBER(38,7)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Double</java-type>
	    <jdbc-type>DOUBLE</jdbc-type>
	    <sql-type>NUMBER(38,15)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Character</java-type>
	    <jdbc-type>CHAR</jdbc-type>
	    <sql-type>CHAR</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.String</java-type>
	    <jdbc-type>VARCHAR</jdbc-type>
	    <sql-type>VARCHAR2(255)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Date</java-type>
	    <jdbc-type>DATE</jdbc-type>
	    <sql-type>DATE</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Time</java-type>
	    <jdbc-type>TIME</jdbc-type>
	    <sql-type>DATE</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Timestamp</java-type>
	    <jdbc-type>TIMESTAMP</jdbc-type>
	    <sql-type>DATE</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Object</java-type>
	    <jdbc-type>JAVA_OBJECT</jdbc-type>
	    <sql-type>LONG RAW</sql-type>
	    <!-- Change this from LONG RAW to RAW(255) if you know your
	    serialized object will be <= 255 bytes -->
	 </mapping>
      </type-mapping-definition>

      <type-mapping-definition>
	 <name>Sybase</name>
	 <mapping>
	    <java-type>java.lang.Boolean</java-type>
	    <jdbc-type>BIT</jdbc-type>
	    <sql-type>BIT</sql-type>
	 </mapping>
	 <!-- Current Sybase JDBC drivers (jConnect 5.2) don't support
	 byte or short.  Unfortunately they'll be serialized.
      <mapping>
      <java-type>java.lang.Byte</java-type>
      <jdbc-type>TINYINT</jdbc-type>
      <sql-type>TINYINT</sql-type>
      </mapping>
      <mapping>
      <java-type>java.lang.Short</java-type>
      <jdbc-type>SMALLINT</jdbc-type>
      <sql-type>SMALLINT</sql-type>
      </mapping>
	 -->
	 <mapping>
	    <java-type>java.lang.Integer</java-type>
	    <jdbc-type>INTEGER</jdbc-type>
	    <sql-type>INTEGER</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Long</java-type>
	    <jdbc-type>NUMERIC</jdbc-type>
	    <sql-type>NUMERIC(38,0)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Float</java-type>
	    <jdbc-type>REAL</jdbc-type>
	    <sql-type>REAL</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Double</java-type>
	    <jdbc-type>DOUBLE</jdbc-type>
	    <sql-type>DOUBLE PRECISION</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Character</java-type>
	    <jdbc-type>CHAR</jdbc-type>
	    <sql-type>CHAR</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.String</java-type>
	    <jdbc-type>VARCHAR</jdbc-type>
	    <sql-type>VARCHAR(255)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Date</java-type>
	    <jdbc-type>DATE</jdbc-type>
	    <sql-type>DATETIME</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Time</java-type>
	    <jdbc-type>TIME</jdbc-type>
	    <sql-type>SMALLDATETIME</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Timestamp</java-type>
	    <jdbc-type>TIMESTAMP</jdbc-type>
	    <sql-type>DATETIME</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Object</java-type>
	    <jdbc-type>JAVA_OBJECT</jdbc-type>
	    <sql-type>IMAGE</sql-type>
	 </mapping>
      </type-mapping-definition>

      <type-mapping-definition>
	 <name>PostgreSQL</name>
	 <mapping>
	    <java-type>java.lang.Boolean</java-type>
	    <jdbc-type>CHAR</jdbc-type>
	    <sql-type>BOOLEAN</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Byte</java-type>
	    <jdbc-type>TINYINT</jdbc-type>
	    <sql-type>INT2</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Short</java-type>
	    <jdbc-type>SMALLINT</jdbc-type>
	    <sql-type>INT2</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Integer</java-type>
	    <jdbc-type>INTEGER</jdbc-type>
	    <sql-type>INT4</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Long</java-type>
	    <jdbc-type>BIGINT</jdbc-type>
	    <sql-type>INT8</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Float</java-type>
	    <jdbc-type>FLOAT</jdbc-type>
	    <sql-type>FLOAT(7)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Double</java-type>
	    <jdbc-type>DOUBLE</jdbc-type>
	    <sql-type>FLOAT8</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Character</java-type>
	    <jdbc-type>CHAR</jdbc-type>
	    <sql-type>CHAR(1)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.String</java-type>
	    <jdbc-type>VARCHAR</jdbc-type>
	    <sql-type>TEXT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Date</java-type>
	    <jdbc-type>DATE</jdbc-type>
	    <sql-type>DATE</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Time</java-type>
	    <jdbc-type>TIME</jdbc-type>
	    <sql-type>TIME</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Timestamp</java-type>
	    <jdbc-type>TIMESTAMP</jdbc-type>
	    <sql-type>TIMESTAMP</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Object</java-type>
	    <jdbc-type>JAVA_OBJECT</jdbc-type>
	    <sql-type>OID</sql-type>
	 </mapping>
      </type-mapping-definition>

      <type-mapping-definition>
	 <name>PostgreSQL 7.2</name>
	 <mapping>
	    <java-type>java.lang.Boolean</java-type>
	    <jdbc-type>CHAR</jdbc-type>
	    <sql-type>BOOLEAN</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Byte</java-type>
	    <jdbc-type>TINYINT</jdbc-type>
	    <sql-type>INT2</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Short</java-type>
	    <jdbc-type>SMALLINT</jdbc-type>
	    <sql-type>INT2</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Integer</java-type>
	    <jdbc-type>INTEGER</jdbc-type>
	    <sql-type>INT4</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Long</java-type>
	    <jdbc-type>BIGINT</jdbc-type>
	    <sql-type>INT8</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Float</java-type>
	    <jdbc-type>FLOAT</jdbc-type>
	    <sql-type>FLOAT(7)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Double</java-type>
	    <jdbc-type>DOUBLE</jdbc-type>
	    <sql-type>FLOAT8</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Character</java-type>
	    <jdbc-type>CHAR</jdbc-type>
	    <sql-type>CHAR(1)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.String</java-type>
	    <jdbc-type>VARCHAR</jdbc-type>
	    <sql-type>TEXT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Date</java-type>
	    <jdbc-type>DATE</jdbc-type>
	    <sql-type>DATE</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Time</java-type>
	    <jdbc-type>TIME</jdbc-type>
	    <sql-type>TIME</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Timestamp</java-type>
	    <jdbc-type>TIMESTAMP</jdbc-type>
	    <sql-type>TIMESTAMP</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Object</java-type>
	    <jdbc-type>JAVA_OBJECT</jdbc-type>
	    <sql-type>OID</sql-type>
	 </mapping>
      </type-mapping-definition>
      
      <type-mapping-definition>
	 <name>Hypersonic SQL</name>
	 <mapping>
	    <java-type>java.lang.Byte</java-type>
	    <jdbc-type>SMALLINT</jdbc-type>
	    <sql-type>SMALLINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.util.Date</java-type>
	    <jdbc-type>DATE</jdbc-type>
	    <sql-type>DATE</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Boolean</java-type>
	    <jdbc-type>BIT</jdbc-type>
	    <sql-type>BIT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Integer</java-type>
	    <jdbc-type>INTEGER</jdbc-type>
	    <sql-type>INTEGER</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Object</java-type>
	    <jdbc-type>JAVA_OBJECT</jdbc-type>
	    <sql-type>OBJECT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Short</java-type>
	    <jdbc-type>SMALLINT</jdbc-type>
	    <sql-type>SMALLINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Character</java-type>
	    <jdbc-type>CHAR</jdbc-type>
	    <sql-type>CHAR</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.String</java-type>
	    <jdbc-type>VARCHAR</jdbc-type>
	    <sql-type>VARCHAR(256)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Timestamp</java-type>
	    <jdbc-type>TIMESTAMP</jdbc-type>
	    <sql-type>TIMESTAMP</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Float</java-type>
	    <jdbc-type>REAL</jdbc-type>
	    <sql-type>REAL</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Long</java-type>
	    <jdbc-type>BIGINT</jdbc-type>
	    <sql-type>BIGINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Double</java-type>
	    <jdbc-type>DOUBLE</jdbc-type>
	    <sql-type>DOUBLE</sql-type>
	 </mapping>
      </type-mapping-definition>

      <type-mapping-definition>
	 <name>PointBase</name>
	 <mapping>
	    <java-type>java.lang.Character</java-type>
	    <jdbc-type>CHAR</jdbc-type>
	    <sql-type>CHAR</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Short</java-type>
	    <jdbc-type>SMALLINT</jdbc-type>
	    <sql-type>SMALLINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Long</java-type>
	    <jdbc-type>BIGINT</jdbc-type>
	    <sql-type>INTEGER</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Double</java-type>
	    <jdbc-type>DOUBLE</jdbc-type>
	    <sql-type>FLOAT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Float</java-type>
	    <jdbc-type>FLOAT</jdbc-type>
	    <sql-type>FLOAT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Boolean</java-type>
	    <jdbc-type>BINARY</jdbc-type>
	    <sql-type>BOOLEAN</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.String</java-type>
	    <jdbc-type>VARCHAR</jdbc-type>
	    <sql-type>VARCHAR(256)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Byte</java-type>
	    <jdbc-type>SMALLINT</jdbc-type>
	    <sql-type>SMALLINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Object</java-type>
	    <jdbc-type>BLOB</jdbc-type>
	    <sql-type>BLOB</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Integer</java-type>
	    <jdbc-type>INTEGER</jdbc-type>
	    <sql-type>INTEGER</sql-type>
	 </mapping>
      </type-mapping-definition>

      <type-mapping-definition>
	 <name>SOLID</name>
	 <mapping>
	    <java-type>java.lang.Character</java-type>
	    <jdbc-type>CHAR</jdbc-type>
	    <sql-type>CHAR</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Byte</java-type>
	    <jdbc-type>TINYINT</jdbc-type>
	    <sql-type>TINYINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Short</java-type>
	    <jdbc-type>INTEGER</jdbc-type>
	    <sql-type>INTEGER</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Double</java-type>
	    <jdbc-type>DOUBLE</jdbc-type>
	    <sql-type>DOUBLE</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Object</java-type>
	    <jdbc-type>BLOB</jdbc-type>
	    <sql-type>BLOB</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.String</java-type>
	    <jdbc-type>VARCHAR</jdbc-type>
	    <sql-type>VARCHAR(256)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Integer</java-type>
	    <jdbc-type>INTEGER</jdbc-type>
	    <sql-type>INTEGER</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Timestamp</java-type>
	    <jdbc-type>TIMESTAMP</jdbc-type>
	    <sql-type>TIMESTAMP</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Boolean</java-type>
	    <jdbc-type>BIT</jdbc-type>
	    <sql-type>BIT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Float</java-type>
	    <jdbc-type>FLOAT</jdbc-type>
	    <sql-type>FLOAT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Long</java-type>
	    <jdbc-type>BIGINT</jdbc-type>
	    <sql-type>BIGINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.util.Date</java-type>
	    <jdbc-type>DATE</jdbc-type>
	    <sql-type>DATE</sql-type>
	 </mapping>
      </type-mapping-definition>

      <type-mapping-definition>
	 <name>mySQL</name>
	 <mapping>
	    <java-type>java.lang.Float</java-type>
	    <jdbc-type>FLOAT</jdbc-type>
	    <sql-type>FLOAT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Double</java-type>
	    <jdbc-type>DOUBLE</jdbc-type>
	    <sql-type>DOUBLE</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Boolean</java-type>
	    <jdbc-type>TINYINT</jdbc-type>
	    <sql-type>TINYINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Object</java-type>
	    <jdbc-type>JAVA_OBJECT</jdbc-type>
	    <sql-type>BLOB</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Integer</java-type>
	    <jdbc-type>INTEGER</jdbc-type>
	    <sql-type>INTEGER</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Short</java-type>
	    <jdbc-type>SMALLINT</jdbc-type>
	    <sql-type>SMALLINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Timestamp</java-type>
	    <jdbc-type>TIMESTAMP</jdbc-type>
	    <sql-type>TIMESTAMP</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Byte</java-type>
	    <jdbc-type>TINYINT</jdbc-type>
	    <sql-type>TINYINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Character</java-type>
	    <jdbc-type>CHAR</jdbc-type>
	    <sql-type>CHAR</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Long</java-type>
	    <jdbc-type>BIGINT</jdbc-type>
	    <sql-type>BIGINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.String</java-type>
	    <jdbc-type>VARCHAR</jdbc-type>
	    <sql-type>VARCHAR(255) BINARY</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.util.Date</java-type>
	    <jdbc-type>DATE</jdbc-type>
	    <sql-type>DATETIME</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Date</java-type>
	    <jdbc-type>DATE</jdbc-type>
	    <sql-type>DATETIME</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Time</java-type>
	    <jdbc-type>TIME</jdbc-type>
	    <sql-type>BIGINT</sql-type>
	 </mapping>
      </type-mapping-definition>

      <type-mapping-definition>
	 <name>MS SQLSERVER</name>
	 <mapping>
	    <java-type>java.lang.Integer</java-type>
	    <jdbc-type>INTEGER</jdbc-type>
	    <sql-type>INTEGER</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Character</java-type>
	    <jdbc-type>CHAR</jdbc-type>
	    <sql-type>CHAR</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Short</java-type>
	    <jdbc-type>SMALLINT</jdbc-type>
	    <sql-type>SMALLINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Double</java-type>
	    <jdbc-type>DOUBLE</jdbc-type>
	    <sql-type>DOUBLE</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Long</java-type>
	    <jdbc-type>DECIMAL</jdbc-type>
	    <sql-type>DECIMAL(20)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.math.BigDecimal</java-type>
	    <jdbc-type>VARCHAR</jdbc-type>
	    <sql-type>VARCHAR(256)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.String</java-type>
	    <jdbc-type>VARCHAR</jdbc-type>
	    <sql-type>VARCHAR(256)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Object</java-type>
	    <jdbc-type>JAVA_OBJECT</jdbc-type>
	    <sql-type>IMAGE</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Byte</java-type>
	    <jdbc-type>TINYINT</jdbc-type>
	    <sql-type>TINYINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Timestamp</java-type>
	    <jdbc-type>TIMESTAMP</jdbc-type>
	    <sql-type>TIMESTAMP</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Date</java-type>
	    <jdbc-type>DATE</jdbc-type>
	    <sql-type>DATETIME</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Time</java-type>
	    <jdbc-type>TIME</jdbc-type>
	    <sql-type>DATETIME</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.util.Date</java-type>
	    <jdbc-type>DATE</jdbc-type>
	    <sql-type>DATETIME</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Boolean</java-type>
	    <jdbc-type>BIT</jdbc-type>
	    <sql-type>BIT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Float</java-type>
	    <jdbc-type>FLOAT</jdbc-type>
	    <sql-type>FLOAT</sql-type>
	 </mapping>
      </type-mapping-definition>

      <type-mapping-definition> 
	 <name>MS SQLSERVER2000</name> 
	 
	 <mapping> 
	    <java-type>java.lang.Integer</java-type> 
	    <jdbc-type>INTEGER</jdbc-type> 
	    <sql-type>INTEGER</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.lang.Character</java-type> 
	    <jdbc-type>CHAR</jdbc-type> 
	    <sql-type>CHAR</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.lang.Short</java-type> 
	    <jdbc-type>SMALLINT</jdbc-type> 
	    <sql-type>SMALLINT</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.lang.Long</java-type> 
	    <jdbc-type>BIGINT</jdbc-type> 
	    <sql-type>BIGINT</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.math.BigDecimal</java-type> 
	    <jdbc-type>VARCHAR</jdbc-type> 
	    <sql-type>VARCHAR(256)</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.lang.String</java-type> 
	    <jdbc-type>VARCHAR</jdbc-type> 
	    <sql-type>VARCHAR(256)</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.lang.Object</java-type> 
	    <jdbc-type>JAVA_OBJECT</jdbc-type> 
	    <sql-type>IMAGE</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.lang.Byte</java-type> 
	    <jdbc-type>TINYINT</jdbc-type> 
	    <sql-type>TINYINT</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.sql.Timestamp</java-type> 
	    <jdbc-type>TIMESTAMP</jdbc-type> 
	    <sql-type>TIMESTAMP</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.sql.Date</java-type> 
	    <jdbc-type>DATE</jdbc-type> 
	    <sql-type>DATETIME</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.sql.Time</java-type> 
	    <jdbc-type>TIME</jdbc-type> 
	    <sql-type>DATETIME</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.util.Date</java-type> 
	    <jdbc-type>DATE</jdbc-type> 
	    <sql-type>DATETIME</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.lang.Boolean</java-type> 
	    <jdbc-type>BIT</jdbc-type> 
	    <sql-type>BIT</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.lang.Float</java-type> 
	    <jdbc-type>REAL</jdbc-type> 
	    <sql-type>REAL</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.lang.Double</java-type> 
	    <jdbc-type>DOUBLE</jdbc-type> 
	    <sql-type>FLOAT</sql-type> 
	 </mapping> 
      </type-mapping-definition>
      
      <type-mapping-definition>
	 <name>DB2/400</name>
	 <mapping>
	    <java-type>java.lang.Character</java-type>
	    <jdbc-type>CHAR</jdbc-type>
	    <sql-type>CHAR(1)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.String</java-type>
	    <jdbc-type>VARCHAR</jdbc-type>
	    <sql-type>VARCHAR(256)</sql-type>
	 </mapping>
	 <!-- Apparent DB2/400 doesn't handle Byte type either
      <mapping>
      <java-type>java.lang.Byte</java-type>
      <jdbc-type>CHAR</jdbc-type>
      <sql-type>CHAR(1) FOR BIT DATA</sql-type>
      </mapping>
	 -->
	 <mapping>
	    <java-type>java.util.Date</java-type>
	    <jdbc-type>DATE</jdbc-type>
	    <sql-type>DATE</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Time</java-type>
	    <jdbc-type>TIME</jdbc-type>
	    <sql-type>TIME</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Float</java-type>
	    <jdbc-type>FLOAT</jdbc-type>
	    <sql-type>FLOAT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Integer</java-type>
	    <jdbc-type>INTEGER</jdbc-type>
	    <sql-type>INTEGER</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Double</java-type>
	    <jdbc-type>DOUBLE</jdbc-type>
	    <sql-type>DOUBLE</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Long</java-type>
	    <jdbc-type>BIGINT</jdbc-type>
	    <sql-type>INTEGER</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Boolean</java-type>
	    <jdbc-type>CHAR</jdbc-type>
	    <sql-type>CHAR(5)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Short</java-type>
	    <jdbc-type>SMALLINT</jdbc-type>
	    <sql-type>SMALLINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Object</java-type>
	    <jdbc-type>JAVA_OBJECT</jdbc-type>
	    <sql-type>VARCHAR(4096) FOR BIT DATA</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Timestamp</java-type>
	    <jdbc-type>TIMESTAMP</jdbc-type>
	    <sql-type>TIMESTAMP</sql-type>
	 </mapping>
      </type-mapping-definition>

      <type-mapping-definition>
	 <name>SapDB</name>
	 <mapping>
	    <java-type>java.lang.Integer</java-type>
	    <jdbc-type>INTEGER</jdbc-type>
	    <sql-type>INTEGER</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Character</java-type>
	    <jdbc-type>CHAR</jdbc-type>
	    <sql-type>CHAR</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.String</java-type>
	    <jdbc-type>VARCHAR</jdbc-type>
	    <sql-type>VARCHAR(256)</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Object</java-type>
	    <jdbc-type>JAVA_OBJECT</jdbc-type>
	    <sql-type>LONG BYTE</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Byte</java-type>
	    <jdbc-type>TINYINT</jdbc-type>
	    <sql-type>CHAR BYTE</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Timestamp</java-type>
	    <jdbc-type>TIMESTAMP</jdbc-type>
	    <sql-type>TIMESTAMP</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.util.Date</java-type>
	    <jdbc-type>DATE</jdbc-type>
	    <sql-type>DATE</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Time</java-type>
	    <jdbc-type>TIME</jdbc-type>
	    <sql-type>TIME</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Boolean</java-type>
	    <jdbc-type>BIT</jdbc-type>
	    <sql-type>BOOLEAN</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Float</java-type>
	    <jdbc-type>FLOAT</jdbc-type>
	    <sql-type>FLOAT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Short</java-type>
	    <jdbc-type>SMALLINT</jdbc-type>
	    <sql-type>SMALLINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Double</java-type>
	    <jdbc-type>DOUBLE</jdbc-type>
	    <sql-type>DOUBLE PRECISION</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Long</java-type>
	    <jdbc-type>DECIMAL</jdbc-type>
	    <sql-type>DECIMAL(20)</sql-type>
	 </mapping>
      </type-mapping-definition>

      <type-mapping-definition>
	 <name>Cloudscape</name>
	 <mapping>
	    <java-type>java.math.BigDecimal</java-type>
	    <jdbc-type>LONGVARCHAR</jdbc-type>
	    <sql-type>LONG VARCHAR</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Boolean</java-type>
	    <jdbc-type>BIT</jdbc-type>
	    <sql-type>BOOLEAN</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Byte</java-type>
	    <jdbc-type>TINYINT</jdbc-type>
	    <sql-type>TINYINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Short</java-type>
	    <jdbc-type>SMALLINT</jdbc-type>
	    <sql-type>SMALLINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Integer</java-type>
	    <jdbc-type>INTEGER</jdbc-type>
	    <sql-type>INTEGER</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Long</java-type>
	    <jdbc-type>BIGINT</jdbc-type>
	    <sql-type>LONGINT</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Float</java-type>
	    <jdbc-type>REAL</jdbc-type>
	    <sql-type>REAL</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Double</java-type>
	    <jdbc-type>DOUBLE</jdbc-type>
	    <sql-type>DOUBLE PRECISION</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Character</java-type>
	    <jdbc-type>CHAR</jdbc-type>
	    <sql-type>CHAR</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.String</java-type>
	    <jdbc-type>LONGVARCHAR</jdbc-type>
	    <sql-type>LONG VARCHAR</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Date</java-type>
	    <jdbc-type>DATE</jdbc-type>
	    <sql-type>DATE</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Time</java-type>
	    <jdbc-type>TIME</jdbc-type>
	    <sql-type>TIME</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.sql.Timestamp</java-type>
	    <jdbc-type>TIMESTAMP</jdbc-type>
	    <sql-type>TIMESTAMP</sql-type>
	 </mapping>
	 <mapping>
	    <java-type>java.lang.Object</java-type>
	    <jdbc-type>JAVA_OBJECT</jdbc-type>
	    <sql-type>LONG VARBINARY</sql-type>
	 </mapping>
      </type-mapping-definition>

      
      <type-mapping-definition> 
	 <name>InformixDB</name> 
	 <mapping> 
	    <java-type>java.lang.Character</java-type> 
	    <jdbc-type>CHAR</jdbc-type> 
	    <sql-type>CHAR(1)</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.lang.String</java-type> 
	    <jdbc-type>VARCHAR</jdbc-type> 
	    <sql-type>VARCHAR(255,0)</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.math.BigDecimal</java-type> 
	    <jdbc-type>NUMERIC</jdbc-type> 
	    <sql-type>DECIMAL</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.lang.Boolean</java-type> 
	    <jdbc-type>BIT</jdbc-type> 
	    <sql-type>SMALLINT</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.lang.Integer</java-type> 
	    <jdbc-type>INTEGER</jdbc-type> 
	    <sql-type>INTEGER</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.lang.Long</java-type> 
	    <jdbc-type>BIGINT</jdbc-type> 
	    <sql-type>NUMERIC(18,0)</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.lang.Float</java-type> 
	    <jdbc-type>REAL</jdbc-type> 
	    <sql-type>FLOAT</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.lang.Double</java-type> 
	    <jdbc-type>DOUBLE</jdbc-type> 
	    <sql-type>DOUBLE PRECISION</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.lang.Byte</java-type> 
	    <jdbc-type>TINYINT</jdbc-type> 
	    <sql-type>SMALLINT</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.lang.Short</java-type> 
	    <jdbc-type>SMALLINT</jdbc-type> 
	    <sql-type>SMALLINT</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.util.Date</java-type> 
	    <jdbc-type>DATE</jdbc-type> 
	    <sql-type>DATE</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.sql.Date</java-type> 
	    <jdbc-type>DATE</jdbc-type> 
	    <sql-type>DATE</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.sql.Time</java-type> 
	    <jdbc-type>TIME</jdbc-type> 
	    <sql-type>TIME</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.sql.Timestamp</java-type> 
	    <jdbc-type>TIMESTAMP</jdbc-type> 
	    <sql-type>DATETIME YEAR TO FRACTION(3)</sql-type> 
	 </mapping> 
	 
	 <mapping> 
	    <java-type>java.lang.Object</java-type> 
	    <jdbc-type>JAVA_OBJECT</jdbc-type> 
	    <sql-type>BYTE</sql-type> 
	 </mapping> 
      </type-mapping-definition> 

   </type-mappings>
</jaws>
