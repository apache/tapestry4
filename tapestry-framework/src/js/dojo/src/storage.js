
dojo.provide("dojo.storage");dojo.require("dojo.lang.*");dojo.require("dojo.event.*");dojo.storage.StorageProvider = {}
dojo.declare("dojo.storage", null, {SUCCESS: "success",FAILED: "failed",PENDING: "pending",SIZE_NOT_AVAILABLE: "Size not available",SIZE_NO_LIMIT: "No size limit","namespace": "dojoStorage",onHideSettingsUI: null,initialize: function(){dojo.unimplemented("dojo.storage.initialize");},isAvailable: function(){dojo.unimplemented("dojo.storage.isAvailable");},put: function(	 key,value,resultsHandler){dojo.unimplemented("dojo.storage.put");},get: function( key){dojo.unimplemented("dojo.storage.get");},hasKey: function( key){return (this.get(key) != null);},clear: function(){dojo.unimplemented("dojo.storage.clear");},remove: function(key){dojo.unimplemented("dojo.storage.remove");},isPermanent: function(){dojo.unimplemented("dojo.storage.isPermanent");},getMaximumSize: function(){dojo.unimplemented("dojo.storage.getMaximumSize");},hasSettingsUI: function(){return false;},showSettingsUI: function(){dojo.unimplemented("dojo.storage.showSettingsUI");},hideSettingsUI: function(){dojo.unimplemented("dojo.storage.hideSettingsUI");},getType: function(){dojo.unimplemented("dojo.storage.getType");},isValidKey: function( keyName){if((keyName == null)||(typeof keyName == "undefined")){return false;}
return /^[0-9A-Za-z_]*$/.test(keyName);}});dojo.storage.manager = new function(){this.currentProvider = null;this.available = false;this.initialized = false;this.providers = [];this["namespace"] = "dojo.storage";this.initialize = function(){this.autodetect();};this.register = function( name,  instance) {this.providers[this.providers.length] = instance;this.providers[name] = instance;};this.setProvider = function(storageClass){};this.autodetect = function(){if(this.initialized == true)
return;var providerToUse = null;for(var i = 0; i < this.providers.length; i++) {providerToUse = this.providers[i];if(providerToUse.isAvailable()){break;}}
if(providerToUse == null){this.initialized = true;this.available = false;this.currentProvider = null;dojo.raise("No storage provider found for this platform");}
this.currentProvider = providerToUse;for(var i in providerToUse){dojo.storage[i] = providerToUse[i];}
dojo.storage.manager = this;dojo.storage.initialize();this.initialized = true;this.available = true;};this.isAvailable = function(){return this.available;};this.isInitialized = function(){if(dojo.flash.ready == false){return false;}else{return this.initialized;}};this.supportsProvider = function( storageClass){try{var provider = eval("new " + storageClass + "()");var results = provider.isAvailable();if(results == null || typeof results == "undefined")
return false;return results;}catch (exception){dojo.debug("exception="+exception);return false;}};this.getProvider = function(){return this.currentProvider;};this.loaded = function(){};};