
dojo.provide("dojo.gfx.common");dojo.require("dojo.gfx.color");dojo.require("dojo.lang.declare");dojo.require("dojo.lang.extras");dojo.require("dojo.dom");dojo.lang.mixin(dojo.gfx, {defaultPath:     {type: "path",     path: ""},defaultPolyline: {type: "polyline", points: []},defaultRect:     {type: "rect",     x: 0, y: 0, width: 100, height: 100, r: 0},defaultEllipse:  {type: "ellipse",  cx: 0, cy: 0, rx: 200, ry: 100},defaultCircle:   {type: "circle",   cx: 0, cy: 0, r: 100},defaultLine:     {type: "line",     x1: 0, y1: 0, x2: 100, y2: 100},defaultImage:    {type: "image",    x: 0, y: 0, width: 0, height: 0, src: ""},defaultText:     {type: "text",     x: 0, y: 0, text: "",align: "start", decoration: "none", rotated: false, kerning: true },defaultTextPath: {type: "textpath", text: "",align: "start", decoration: "none", rotated: false, kerning: true },defaultStroke: {type: "stroke", color: "black", width: 1, cap: "butt", join: 4},defaultLinearGradient: {type: "linear", x1: 0, y1: 0, x2: 100, y2: 100,colors: [{offset: 0, color: "black"}, {offset: 1, color: "white"}]},defaultRadialGradient: {type: "radial", cx: 0, cy: 0, r: 100,colors: [{offset: 0, color: "black"}, {offset: 1, color: "white"}]},defaultPattern: {type: "pattern", x: 0, y: 0, width: 0, height: 0, src: ""},defaultFont: {type: "font", style: "normal", variant: "normal", weight: "normal",size: "10pt", family: "serif"},normalizeColor: function( color){return (color instanceof dojo.gfx.color.Color) ? color : new dojo.gfx.color.Color(color);},normalizeParameters: function(existed, update){if(update){var empty = {};for(var x in existed){if(x in update && !(x in empty)){existed[x] = update[x];}}
}
return existed;},makeParameters: function(defaults, update){if(!update) return dojo.lang.shallowCopy(defaults, true);var result = {};for(var i in defaults){if(!(i in result)){result[i] = dojo.lang.shallowCopy((i in update) ? update[i] : defaults[i], true);}}
return result;},formatNumber: function(x, addSpace){var val = x.toString();if(val.indexOf("e") >= 0){val = x.toFixed(4);}else{var point = val.indexOf(".");if(point >= 0 && val.length - point > 5){val = x.toFixed(4);}}
if(x < 0){return val;}
return addSpace ? " " + val : val;},makeFontString: function(font){return font.style + " " + font.variant + " " + font.weight + " " + font.size + " " + font.family;},splitFontString: function(str){var font = dojo.lang.shallowCopy(dojo.gfx.defaultFont);var t = str.split(/\s+/);do{if(t.length < 5){ break; }
font.style  = t[0];font.varian = t[1];font.weight = t[2];var i = t[3].indexOf("/");font.size = i < 0 ? t[3] : t[3].substring(0, i);var j = 4;if(i < 0){if(t[4] == "/"){j = 6;break;}
if(t[4].substr(0, 1) == "/"){j = 5;break;}}
if(j + 3 > t.length){ break; }
font.size = t[j];font.family = t[j + 1];}while(false);return font;},pathRegExp: /([A-Za-z]+)|(\d+(\.\d+)?)|(\.\d+)|(-\d+(\.\d+)?)|(-\.\d+)/g
});dojo.declare("dojo.gfx.Surface", null,function(){this.rawNode = null;},{getEventSource: function(){return this.rawNode;},createShape: function(shape){switch(shape.type){case dojo.gfx.defaultPath.type:return this.createPath(shape);case dojo.gfx.defaultRect.type:return this.createRect(shape);case dojo.gfx.defaultCircle.type:return this.createCircle(shape);case dojo.gfx.defaultEllipse.type:return this.createEllipse(shape);case dojo.gfx.defaultLine.type:return this.createLine(shape);case dojo.gfx.defaultPolyline.type:return this.createPolyline(shape);case dojo.gfx.defaultImage.type:return this.createImage(shape);case dojo.gfx.defaultText.type:return this.createText(shape);case dojo.gfx.defaultTextPath.type:return this.createTextPath(shape);}
return null;}});dojo.declare("dojo.gfx.Point", null, {});dojo.declare("dojo.gfx.Rectangle", null, {});