<?xml version="1.0"?>
<!-- 
   Copyright 2005 The Apache Software Foundation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.2//EN" "./dtd/document-v12.dtd" [
  
<!ENTITY spec '../UsersGuide/spec.html'>
<!ENTITY javadoc 'apidocs/org/apache/tapestry/annotations'>  
  
 ]>
<document>

  <header>
    <title>Tapestry Annotations</title>
	</header>
	
  <body>
    <p> This library does not contain components; instead it provides <em>annotations</em>, 
      a <link href="http://java.sun.com/j2se/1.5.0/docs/guide/language/annotations.html">new feature 
        in JDK 1.5</link>. Annotations allow you to perform some operations inside Java code that otherwise would be specified in the page or component specification. This is very useful when using inheritance, because base classes can provide annotations that are inherited by subclasses. </p>
        
        <p>
          The annotations are all in the package org.apache.tapestry.annotations.
        </p>
        
  <table>
    <tr>
      <th>Annotation</th>
      <th>Specification Equivalent</th>
    </tr>
    
    <tr>
      <td>
        <link href="#ann.InjectObject">InjectObject</link>
      </td>
      <td>
        <link href="&spec;#spec.inject">&lt;inject&gt;</link>
      </td>
    </tr>
  </table>        
        
        
<section id="ann.InjectObject">
  <title>InjectObject</title>
  
  <p>
  The <link href="&javadoc;/InjectObject.html">InjectObject</link> annotation
  allows HiveMind objects to be injected. It is attached to an accessor method:
  </p>
  
<source>
  @InjectObject("infrastructure:request")
  public abstract WebRequest getRequest();
</source>  
    
<p>
The end result is the same as using the <link href="&spec;#spec.inject">&lt;inject&gt;</link> element,
with the default type of "object".
</p>    
    
</section>      
        
  </body>
</document>
