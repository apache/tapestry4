<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Copyright 2005 The Apache Software Foundation
    
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
    http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<document>
    <properties>
        <title>TableView</title>
    </properties>
    <body>

        <section name="TableView">

            <p>
                <strong>Providing the data</strong>
            </p>

            <p>
                A low level
                <a href="table.html">Table</a>
                component that wraps all other low level
                <a href="table.html">Table</a>
                components. This component carries the
                <a href="../../tapestry-contrib/apidocs/org/apache/tapestry/table/model/ITableModel.html">
                    ITableModel
                </a>
                that is used by the other
                <a href="table.html">Table</a>
                components. The information that will be displayed can be provided either via the
                source and columns parameters, or via the
                <code>tableModel</code>
                parameters.
            </p>

            <p>
                There are many ways to provide the component with the data it has to render, but
                here are the three major ones:
            </p>

            <ol>
                <li>
                    The data is passed to the source parameter in the form of an array, a
                    collection, or an iterator, and the table columns are defined using the columns
                    parameter (see further for details). Both of these parameters will be evaluated
                    at every request by default, so changes in the data or the table columns will be
                    displayed immediately.
                    <br />
                    <br />
                    This is the easiest and most straightforward approach. It has one performance
                    limitation, however - if the table is sorting the data according to a given
                    column, the sorting will be performed at every request. The next methods provide
                    ways to resolve this possible performance issue.
                </li>

                <li>
                    The data is passed to the source parameter via an object that implements the
                    IBasicTableModel interface. Through that interface you are given the sorting
                    column (if any) and the numbers of the items that will be displayed on the
                    current page. You then need to provide the component with the corresponding
                    data.
                    <br />
                    <br />
                    This method allows you to perform the sorting in the database and load only the
                    data that will be displayed on the current page (e.g. by using the ORDER BY,
                    LIMIT, and OFFSET clauses in SQL) and hence it could be far more efficient.
                </li>

                <li>
                    All of the information (data, columns, state) is packaged in an
                    <a
                        href="../../tapestry-contrib/apidocs/org/apache/tapestry/table/model/ITableModel.html">
                        ITableModel
                    </a>
                    and is passed to the
                    <code>tableModel</code>
                    parameter.
                    <br />
                    <br />
                    This approach allows greatest flexibility, but is recommended only for advanced
                    users of the Table components.
                </li>
            </ol>

            <p>
                <strong>Defining the columns</strong>
            </p>

            <p>
                If you define the table columns using the
                <code>columns</code>
                parameter, you can either provide a list of
                <a
                    href="../../tapestry-contrib/apidocs/org/apache/tapestry/table/model/ITableColumn.html">
                    <code>ITableColumn</code>
                </a>
                objects, each defining a column in the table, or you can define the columns using a
                string that describes each column.
            </p>
            <p>The string describing the columns must be formatted in the following way:</p>
            <ul>
                <li>
                    The column definitions in the string are separated by commas
                    <br />
                    <br />
                </li>
                <li>
                    Each column definition must be of one of the following types:
                    <ul>
                        <li>id</li>
                        <li>id:expression</li>
                        <li>id:description:expression</li>
                    </ul>
                    <br />
                    Here the
                    <strong>id</strong>
                    defines the identification of the column, the
                    <strong>expression</strong>
                    is an OGNL expression that extracts the column value from the row object, and
                    <strong>description</strong>
                    is the title of the column if it is not defined otherwise.
                    <br />
                    <br />
                    Each column definition may be prefixed by the
                    <strong>!</strong>
                    character, which identifies the column as non-sortable.
                    <br />
                    <br />
                    If defined, a Block with a name that is starts with the column id and ends with
                    <em>ColumnValue</em>
                    will be used to render the column values. Similarly, a Block with a name that
                    starts with the column id and ends with
                    <em>ColumnHeader</em>
                    will be used to render the column headers.
                    <br />
                    <br />
                    Finally, the title of the column will be taken from translation strings of the
                    component by using the column id as a key.
                    <br />
                    <br />
                    Please see the
                    <code>LocaleSelection</code>
                    component for examples.
                    <br />
                    <br />
                </li>
                <li>
                    A column definition may also be of the type
                    <br />
                    <br />
                    <ul>
                        <li>=expression</li>
                    </ul>
                    <br />
                    in which case it identifies an OGNL expression that returns an
                    <a
                        href="../../tapestry-contrib/apidocs/org/apache/tapestry/table/model/ITableColumn.html">
                        <code>ITableColumn</code>
                    </a>
                    object defining the column.
                    <br />
                    <br />
                </li>
                <li>
                    The full description string may be prefixed by the
                    <strong>*</strong>
                    character, which means that the table is to be rendered within a form, and the
                    column headers must submit the form if they are clickable (i.e. if the column is
                    sortable).
                </li>
            </ul>
            <p>
                Here is an example of the use of a description string to define columns:
                <code>
                    columns="locale:toString(), =currencyColumn,
                    verbosity:Verbosity:currentRowVerbosity, !delete"
                </code>
            </p>


            <p>
                <strong>
                    See also:
                    <a href="table.html">Table</a>
                    ,
                    <a href="tableview.html">TableView</a>
                    ,
                    <a href="tablepages.html">TablePages</a>
                    ,
                    <a href="tablerows.html">TableRows</a>
                    ,
                    <a href="tablevalues.html">TableValues</a>
                    ,
                    <a href="tablecolumns.html">TableColumns</a>
                </strong>
            </p>

            <subsection name="Parameters">
                <table>
                    <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Required</th>
                        <th>Default</th>
                        <th>Description</th>
                    </tr>

                    <tr>
                        <td>source</td>
                        <td>
                            <a
                                href="http://java.sun.com/j2se/1.5.0/docs/api/java/lang/Object.html">
                                Object
                            </a>
                            []
                            <br />
                            <a
                                href="http://java.sun.com/j2se/1.5.0/docs/api/java/util/Collection.html">
                                Collection
                            </a>
                            <br />
                            <a
                                href="http://java.sun.com/j2se/1.5.0/docs/api/java/util/Iterator.html">
                                Iterator
                            </a>
                            <br />
                            <a
                                href="../../tapestry-contrib/apidocs/org/apache/tapestry/table/model/IBasicTableModel.html">
                                IBasicTableModel
                            </a>
                        </td>
                        <td rowspan="3">
                            You must provide either both
                            <code>source</code>
                            and
                            <code>columns</code>
                            parameters or the
                            <code>tableModel</code>
                            parameter
                        </td>
                        <td> </td>

                        <td>
                            The data to be displayed by the component. This parameter must be used
                            in combination with the columns parameter. The parameter must be an
                            array of values, a collection, an iterator, or an object implementing
                            the
                            <a
                                href="../../tapestry-contrib/apidocs/org/apache/tapestry/table/model/IBasicTableModel.html">
                                IBasicTableModel
                            </a>
                            interface.
                        </td>
                    </tr>

                    <tr>
                        <td>columns</td>
                        <td>
                            <a
                                href="http://java.sun.com/j2se/1.5.0/docs/api/java/lang/String.html">
                                String
                            </a>
                            <br />
                            <a
                                href="../../tapestry-contrib/apidocs/org/apache/tapestry/table/model/ITableColumnModel.html">
                                ITableColumnModel
                            </a>
                            <br />
                            <a
                                href="../../tapestry-contrib/apidocs/org/apache/tapestry/table/model/ITableColumnModel.html">
                                ITableColumnModel
                            </a>
                            <br />
                            <a href="http://java.sun.com/j2se/1.5.0/docs/api/java/util/List.html">
                                List
                            </a>
                            <br />
                            <a
                                href="http://java.sun.com/j2se/1.5.0/docs/api/java/util/Iterator.html">
                                Iterator
                            </a>
                        </td>
                        <td></td>
                        <td> </td>

                        <td>
                            The table columns to be displayed. The parameter must be an array, a
                            list, or an Iterator of ITableColumn objects, an ITableColumnModel, or a
                            String describing the columns (see documentation).
                        </td>
                    </tr>

                    <tr>
                        <td>tableModel</td>
                        <td>
                            <a
                                href="../../tapestry-contrib/apidocs/org/apache/tapestry/table/model/ITableModel.html">
                                ITableModel
                            </a>
                        </td>
                        <td></td>
                        <td> </td>

                        <td>
                            The
                            <a
                                href="../../tapestry-contrib/apidocs/org/apache/tapestry/table/model/ITableModel.html">
                                ITableModel
                            </a>
                            to be used to render the table. The model contains all of the
                            information needed to render the table and gives greatest flexibility,
                            but it may be harder to implement than simply using the source and
                            columns parameters.
                        </td>
                    </tr>

                    <tr>
                        <td>tableSessionStateManager</td>
                        <td>
                            <a
                                href="../../tapestry-contrib/apidocs/org/apache/tapestry/table/model/ITableSessionStateManager.html">
                                ITableSessionStateManager
                            </a>
                        </td>
                        <td>no</td>
                        <td>
                            A custom session state manager that reloads the data at each request if
                            it is provided via the source and columns parameters or stores all of it
                            in the session if it is provided via the tableModel parameter
                        </td>

                        <td>
                            This is the session state manager that will control what part of the
                            table model will be saved in the session state. It is then used to
                            recreate the table model by using what was saved in the session.
                            <br />
                            You can use one of the stock implementations of
                            <a
                                href="../../tapestry-contrib/apidocs/org/apache/tapestry/table/model/ITableSessionStateManager.html">
                                ITableSessionStateManager
                            </a>
                            to determine the session state behaviour, or you can define your own.
                        </td>
                    </tr>

                    <tr>
                        <td>tableSessionStoreManager</td>
                        <td>
                            <a
                                href="../../tapestry-contrib/apidocs/org/apache/tapestry/table/model/ITableSessionStoreManager.html">
                                ITableSessionStoreManager
                            </a>
                        </td>
                        <td>no</td>
                        <td></td>
                        <td>
                            Determines how the session state (returned by the session state manager)
                            will be saved in the session. If this parameter is null, then the state
                            will be saved as a persistent property. If it is not null, then the
                            methods of the interface will be used to save and load the state.
                        </td>
                    </tr>

                    <tr>
                        <td>pageSize</td>
                        <td>int</td>
                        <td>no</td>
                        <td>10</td>
                        <td>
                            The number of records displayed per page.
                            <br />
                            This parameter is only used with the source and columns parameters.
                        </td>
                    </tr>

                    <tr>
                        <td>initialSortColumn</td>
                        <td>
                            <a
                                href="http://java.sun.com/j2se/1.5.0/docs/api/java/lang/String.html">
                                String
                            </a>
                        </td>
                        <td>no</td>
                        <td></td>
                        <td>
                            The id of the column to initially sort the table by. A value of null
                            indicates no sorting.
                            <br />
                            This parameter is only used with the source and columns parameters.
                        </td>
                    </tr>

                    <tr>
                        <td>initialSortOrder</td>
                        <td>boolean</td>
                        <td>no</td>
                        <td>false</td>
                        <td>
                            The order of the initial sorting. Set this parameter to false to sort in
                            an ascending order and to true to sort in a descending one.
                            <br />
                            This parameter is only used with the source and columns parameters.
                        </td>
                    </tr>

                    <tr>
                        <td>element</td>
                        <td>
                            <a
                                href="http://java.sun.com/j2se/1.5.0/docs/api/java/lang/String.html">
                                String
                            </a>
                        </td>
                        <td>no</td>
                        <td>table</td>
                        <td>
                            The tag that will be used to wrap the inner components. If no binding is
                            given, the tag that will be generated is 'table'. If you would like to
                            place the bounds of the table elsewhere, you can make the element 'span'
                            or another neutral tag and manually define the table.
                        </td>
                    </tr>

                </table>

                <p>
                    Body:
                    <strong>removed</strong>
                </p>

                <p>
                    Informal parameters:
                    <strong>allowed</strong>
                </p>

                <p>
                    Reserved parameters:
                    <em>none</em>
                </p>

            </subsection>

            <subsection name="Examples">


            </subsection>

        </section>

    </body>
</document>
