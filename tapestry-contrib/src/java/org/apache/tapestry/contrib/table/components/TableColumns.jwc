<?xml version="1.0" encoding="UTF-8"?>
<!-- 
   Copyright 2004, 2005 The Apache Software Foundation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<!DOCTYPE component-specification PUBLIC 
  "-//Apache Software Foundation//Tapestry Specification 4.0//EN" 
  "http://tapestry.apache.org/dtd/Tapestry_4_0.dtd">
	
<component-specification class="org.apache.tapestry.contrib.table.components.TableColumns" 
	allow-body="yes" allow-informal-parameters="yes">
	
	<description>
        A low level Table component that renders the column headers in the table. 
        This component must be wrapped by TableView. 
	</description>
  
	<parameter name="column">
        <description>The column currently being rendered [out]</description>
    </parameter>

	<parameter name="element" default-value="literal:th">
        <description>The tag to use to wrap the column headers.</description>
    </parameter>

	<parameter name="arrowUpAsset">
        <description>The image to use to describe a column sorted in an ascending order.</description>
    </parameter>

	<parameter name="arrowDownAsset">
        <description>The image to use to describe a column sorted in a descending order.</description>
    </parameter>

    <parameter name="class" property="columnClassParameter">
        <description>The CSS class of the table columns</description>
    </parameter>
    
	<component id="iterColumns" type="For">
		<binding name="source" value="ognl:tableColumnIterator"/>
		<binding name="value" value="ognl:tableColumn"/>
		<binding name="volatile" value="true"/>
	</component>
  
	<component id="informal" type="Any" inherit-informal-parameters="yes">
		<binding name="element" value="ognl:element"/>
        <binding name="class" value="ognl:columnClass"/>
	</component>
  
	<component id="insertColumnRenderer" type="Delegator">
		<binding name="delegate" value="ognl:tableColumnRenderer"/>
	</component>

</component-specification>
