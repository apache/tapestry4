<?xml version="1.0"?>
<!-- 
   Copyright 2005, 2006 The Apache Software Foundation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.2//EN" "./dtd/document-v12.dtd"
[
	<!ENTITY projectroot '../../'>
	<!ENTITY % links.ent SYSTEM "../../links.ent">
	%links.ent;
]>
<document>
  <header>
    <title>XTile</title>
  </header>
  
  <body>

<p>
   A component providing the required JavaScript to pass some information to the server
   and receive its response without reloading the page (Ajax)
</p>

<warning>
	The <link href="&apicontrib;/contrib/ajax/XTileService.html">XTileService</link>
	that this component uses does NOT activate any page - it simply calls the specified 
	listener. This means that pageBeginRender() methods will not get called and that 
	cycle.getPage() will return null.
</warning>

<section>
  <title>Parameters</title>
  
<table>
	<tr> 
    	<th>Name</th>
	    <th>Type</th>
	 	<th>Direction</th>
	    <th>Required</th> 
    	<th>Default</th>
	    <th>Description</th>
	</tr>

    <tr>
		<td>listener</td>
		<td>&IActionListener;</td> 
		<td>in</td>
		<td>yes</td>
		<td></td>
		<td>
        The listener that will be invoked when the Javascript function with the given name is invoked.
        Any parameters passed to the send function will be available from cycle.getListenerParameters(). 
        In addition, the listener can perform cycle.setListenerParameters() to pass an array of
        strings to the JavaScript receive function.
		</td>
    </tr>
    
    <tr>
		<td>sendName</td>
		<td>String</td> 
		<td>in</td>
		<td>yes</td>
		<td></td>
		<td>
        The name of the JavaScript function that the script will define to allow the application
        to send information to the server.
     </td>
     </tr>
    
    <tr>
		<td>receiveName</td>
		<td>String</td> 
		<td>in</td>
		<td>yes</td>
		<td></td>
		<td>
        The name of the JavaScript function that the script will call to allow the application
        to receive information from the server some time after the send function has been invoked.
     </td>
     </tr>
    
    <tr>
		<td>errorName</td>
		<td>String</td> 
		<td>in</td>
		<td>no</td>
		<td>null</td>
		<td>
        The name of the JavaScript function that the script will call to indicate that
        an error has occurred while sending the information to the server.
     </td>
     </tr>
    
    <tr>
		<td>disableCaching</td>
		<td>boolean</td> 
		<td>in</td>
		<td>no</td>
		<td>false</td>
		<td>
        Some browsers cache repeated requests that have identical URLs.
        Pass 'true' to this parameter to disable caching by making the URLs unique.
     </td>
     </tr>
</table>
  
<p>
  Body: <strong>removed</strong>
</p>  

<p>
  Informal parameters: <strong>allowed</strong>
</p>

<p>
  Reserved parameters: <em>none</em>
</p>

</section>

<section>
  <title>Examples</title>
    <p>The XTile example has portions implemented in the HTML and a listener method
       in the page class. They are broken down as follows:</p>
       
    <p>XTileExample.html</p>

  	<source><![CDATA[
<html>
  <head>
    <title>XTile Example</title>
  </head>
  <body>
    <span jwcid="@contrib:XTile" listener="ognl:listeners.handleListRequest"
        sendName="sendPrefix" receiveName="recvList"/>
    <form action="Results.html" method="post">
       <input type="text" onkeyup="sendPrefix(this.value)"/>
       <br/>
       <textarea name="listing" rows="5"></textarea>
    </form>
    <script>
      function recvList(arr) {
      	document.f.listing.value = arr.join("\n");
      }
    </script>

  </body>
</html>
	]]></source>
	
	  <p>Then in your page class you just need to add the appropriate method.</p>
	  
    <p>XTileExample.java</p>
  	<source><![CDATA[
    .
    .
    .
    public void handleListRequest(IRequestCycle cycle) {
      Object[] params = cycle.getListenerParameters();
      if (params.length == 0) return;

      String typed = params[0].toString();
      String[] ret = findCompletions(typed);
      cycle.setListenerParameters(ret);
    }
    .
    .
    .
	]]></source>

</section>
</body>
</document>