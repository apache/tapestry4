<?xml version="1.0"?>
<!-- 
   Copyright 2005, 2006 The Apache Software Foundation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.2//EN" "./dtd/document-v12.dtd"
[
	<!ENTITY projectroot '../../'>
	<!ENTITY % links.ent SYSTEM "../../links.ent">
	%links.ent;
]>
<document>
  <header>
    <title>NumericField</title>
  </header>
  
  <body>

<p> Backwards compatible version of the 1.0.7 NumericField component.
</p>

<p>
  <strong>See also: &ValidField;</strong>
</p>

<warning>
  This component has been deprecated; Tapestry 4.0 adds even better support for  validation to &TextField;, &TextArea; and most other
  form element component.
</warning>

<section>
  <title>Parameters</title>
  
<table>
  <tr> 
    <th>Name</th>
    <th>Type</th>
	  <th>Direction</th>
    <th>Required</th> 
    <th>Default</th>
    <th>Description</th>
  </tr>
    <tr>
      <td>text</td>
      <td>java.lang.Number</td> <td>in/out</td> <td>yes</td> <td>&nbsp;</td>
      <td>
        The value to be updated.
When the form is submitted, this parameter is only updated if the value is valid.
When rendering, a null value will render as the empty string. A value of zero will render normally.
When the form is submitted, the type of the binding is used to determine what kind of object to convert the string to.
      </td>
    </tr>
    <tr>
      <td>minimum</td>
      <td>java.lang.Number</td> <td>in</td> <td>no</td> <td>&nbsp;</td>
      <td>
        The minimum value accepted for the field.
      </td>
    </tr>
    <tr>
      <td>maximum</td>
      <td>java.lang.Number</td> <td>in</td> <td>no</td> <td>&nbsp;</td>
      <td>
        The maximum value accepted for the field.
      </td>
    </tr>
    <tr>
      <td>required</td>
      <td>boolean</td> <td>in</td> <td>no</td> <td>false</td>
      <td>
        If true, then a non-null value must be provided. If the field is not required, and a null (all whitespace) value is supplied in the field, then the value parameter is not updated.
      </td>
    </tr>
    <tr>
      <td>displayName</td>
      <td>String</td> <td>in</td> <td>yes</td> <td>&nbsp;</td>
      <td>
        A textual name for the field that is used when formulating error messages.
      </td>
    </tr>
    <tr>
      <td>type</td>
      <td>String</td> <td>in</td> <td>yes</td> <td>&nbsp;</td>
      <td>
        The class name used to convert the value entered. See NumberValidator.setValueType(String)
      </td>
    </tr>
	</table>
  
<p>
  Body: <strong>removed</strong>
</p>  

<p>
  Informal parameters: <strong>allowed</strong>
</p>

<p>
  Reserved parameters: <em>name</em>
</p>

</section>

</body>
</document>