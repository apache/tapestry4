<?xml version="1.0" encoding="UTF-8"?>
<!-- 
   Copyright 2004, 2005 The Apache Software Foundation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<module id="tapestry.bindings" version="3.1.0">
  
  Services for creating instance of IBinding.
  
  <service-point id="OGNLBindingFactory" interface="org.apache.tapestry.binding.BindingFactory">
    
    Creates bindings where the path is a OGNL expression.
    
    <invoke-factory>
      <construct class="org.apache.tapestry.binding.OGNLBindingFactory">
        <set-service property="expressionEvaluator" service-id="tapestry.ognl.ExpressionEvaluator"/>
        <set-service property="expressionCache" service-id="tapestry.ognl.ExpressionCache"/>
        <set-service property="valueConverter" service-id="tapestry.coerce.ValueConverter"/>
      </construct>
    </invoke-factory>
  </service-point>

  <service-point id="MessageBindingFactory" interface="org.apache.tapestry.binding.BindingFactory">
    
    Creates bindings where the path is a localized message key for the component.
    
    <invoke-factory>
      <construct class="org.apache.tapestry.binding.MessageBindingFactory">
        <set-service property="valueConverter" service-id="tapestry.coerce.ValueConverter"/>  
      </construct>
    </invoke-factory>
    
  </service-point>
  
  <service-point id="LiteralBindingFactory" interface="org.apache.tapestry.binding.BindingFactory">
    
    Creates bindings where the path is the literal (aka static) value.
    
    <invoke-factory>
      <construct class="org.apache.tapestry.binding.LiteralBindingFactory">
        <set-service property="valueConverter" service-id="tapestry.coerce.ValueConverter"/>  
      </construct>
    </invoke-factory> 
    
  </service-point>
  

  <service-point id="AssetBindingFactory" interface="org.apache.tapestry.binding.BindingFactory">
    
    Creates bindings where the path is the name of an asset of the component.
    
    <invoke-factory>
      <construct class="org.apache.tapestry.binding.AssetBindingFactory">
        <set-service property="valueConverter" service-id="tapestry.coerce.ValueConverter"/>
      </construct>
    </invoke-factory>    
    
  </service-point>

  <service-point id="BeanBindingFactory" interface="org.apache.tapestry.binding.BindingFactory">
    
    Creates bindings where the path is the name of a managed bean defined by the component.
    
    <invoke-factory>
      <construct class="org.apache.tapestry.binding.BeanBindingFactory">
        <set-service property="valueConverter" service-id="tapestry.coerce.ValueConverter"/>
      </construct>
    </invoke-factory>    
    
  </service-point>

  <service-point id="ListenerBindingFactory" interface="org.apache.tapestry.binding.BindingFactory">
    
    Binding factory where the path is the name of a component listener method.
    
    <invoke-factory>
      <construct class="org.apache.tapestry.binding.ListenerBindingFactory">
        <set-service property="valueConverter" service-id="tapestry.coerce.ValueConverter"/>
      </construct>
    </invoke-factory>    
    
  </service-point>

  <service-point id="ComponentBindingFactory" interface="org.apache.tapestry.binding.BindingFactory">
    
    Binding factory where the path is the is of a nested component.
    
    <invoke-factory>
      <construct class="org.apache.tapestry.binding.ComponentBindingFactory">
        <set-service property="valueConverter" service-id="tapestry.coerce.ValueConverter"/>
      </construct>
    </invoke-factory>    
    
  </service-point>
  
  <service-point id="StateBindingFactory" interface="org.apache.tapestry.binding.BindingFactory">
    
    Creates bindings where the path is the name of an asset of the component.
    
    <invoke-factory>
      <construct class="org.apache.tapestry.binding.StateBindingFactory">
        <set-service property="valueConverter" service-id="tapestry.coerce.ValueConverter"/>
        <set-object property="applicationStateManager" object="infrastructure:applicationStateManager"/> 
      </construct>
    </invoke-factory>    
    
  </service-point>  

  
  <configuration-point id="BindingFactories">
    
    Used to map binding prefixes to binding factories.
    
    <schema>
	    <element name="binding">
	      
	      <attribute name="prefix" unique="true" required="true">
	        The unique prefix for this factory.
	      </attribute>
	      
	        <attribute name="service-id" required="true" translator="service">
          The service associated with the given prefix.
        </attribute>
      
        <conversion class="org.apache.tapestry.services.impl.BindingPrefixContribution">
          <map attribute="service-id" property="factory"/>
        </conversion>
  
      </element>
    </schema>
  </configuration-point>
  
  
  <contribution configuration-id="BindingFactories">
    <binding prefix="ognl" service-id="OGNLBindingFactory"/>
    <binding prefix="message" service-id="MessageBindingFactory"/>
    <binding prefix="literal" service-id="LiteralBindingFactory"/>
    <binding prefix="asset" service-id="AssetBindingFactory"/>
    <binding prefix="bean" service-id="BeanBindingFactory"/>
    <binding prefix="listener" service-id="ListenerBindingFactory"/>
    <binding prefix="component" service-id="ComponentBindingFactory"/>
    <binding prefix="state" service-id="StateBindingFactory"/>
  </contribution>
  
  <service-point id="BindingSource" interface="org.apache.tapestry.binding.BindingSource">
    
    <invoke-factory>
      <construct class="org.apache.tapestry.services.impl.BindingSourceImpl">
        <set-service property="literalBindingFactory" service-id="LiteralBindingFactory"/>
        <set-configuration property="contributions" configuration-id="BindingFactories"/>
      </construct>
    </invoke-factory>
  </service-point>

</module>