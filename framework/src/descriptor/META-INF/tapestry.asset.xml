<?xml version="1.0"?>
<!-- 
   Copyright 2004, 2005 The Apache Software Foundation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<module id="tapestry.asset" version="3.1.0" package="org.apache.tapestry.asset">
  
  Factories for creating IAsset instances.
  
  <configuration-point id="AssetFactories">
    
    Maps asset path prefixes to AssetFactory implementations.
    
<schema>
      <element name="factory">
      <attribute name="prefix" required="true" unique="true">
        The prefix to map.
      </attribute>
      <attribute name="object" required="true" translator="object">
        The asset factory for the prefix.
      </attribute>
      
      <conversion class="AssetFactoryContribution">
        <map attribute="object" property="factory"/>
      </conversion>
    </element>

</schema>    
  </configuration-point>
  
  <contribution configuration-id="AssetFactories">
    
    <factory prefix="context" object="service:ContextAssetFactory"/>
    <factory prefix="classpath" object="service:ClasspathAssetFactory"/>
    
  </contribution>
  
  <service-point id="DefaultAssetFactory" interface="AssetFactory">
    
    AssetFactory used when the prefix on the path is not known.
    
    <create-instance class="DefaultAssetFactory"/>
    
  </service-point>
  
  <service-point id="ContextAssetFactory" interface="AssetFactory">
    
    AssetFactory used when the prefix is "context:" or the base
    resource is a ContextResource.
    
    <invoke-factory>
      <construct class="ContextAssetFactory">
        <set-service property="context" service-id="tapestry.globals.WebContext"/>
        <set-object property="contextPath" value="infrastructure:contextPath"/>
      </construct>
    </invoke-factory>
    
  </service-point>
  
  <service-point id="ClasspathAssetFactory" interface="AssetFactory">
    
    AssetFactory used when the prefix is "classpath:" or the
    base resource is a ClasspathResource.
    
    <create-instance class="ClasspathAssetFactory"/>
    
  </service-point>
  
  <configuration-point id="AssetFactoryAdapters" schema-id="hivemind.lib.AdapterRegistry"/>
  
  <contribution configuration-id="AssetFactoryAdapters">
    <adapter class="org.apache.hivemind.util.ContextResource" 
            object="service:ContextAssetFactory"/>
            
    <adapter class="org.apache.hivemind.util.ClasspathResource"
            object="service:ClasspathAssetFactory"/>
            
  </contribution>
  
  <service-point id="LookupAssetFactory" interface="AssetFactory">
    
    AssetFactory that delegates to another implementation based on
    the type of resource.  Used when the asset path does not contain
    a prefix.
    
    <invoke-factory service-id="hivemind.lib.AdapterRegistryFactory">
      <construct configuration-id="AssetFactoryAdapters"/>
    </invoke-factory>
  </service-point>
  
  <service-point id="AssetSource" interface="AssetSource">
    
    The master factory for assets, which identifies the correct
    AssetFactory based on the prefix of the asset path (if any).
    
    <invoke-factory>
      <construct class="AssetSourceImpl">
        <set-configuration property="contributions" configuration-id="AssetFactories"/>
        <set-service property="lookupAssetFactory" service-id="LookupAssetFactory"/>
        <set-service property="defaultAssetFactory" service-id="DefaultAssetFactory"/>
      </construct>
    </invoke-factory>
  </service-point>


  <service-point id="ResourceDigestSource" interface="ResourceDigestSource">
    
    Reads and caches Digest digests of files exposed by the AssetService.
    
    <invoke-factory>
      <construct class="ResourceDigestSourceImpl"/>
    </invoke-factory>
  </service-point>  
  
  <service-point id="AssetExternalizer" interface="AssetExternalizer">
    
    Used by the AssetService to copy private assets out onto the file system within
    a web folder, so that static URLs to the assets may be generated.
    
    <invoke-factory>
      <construct class="AssetExternalizerImpl">
        <set-object property="propertySource" value="infrastructure:applicationPropertySource"/>
      </construct>
    </invoke-factory>
    
  </service-point>
  
</module>