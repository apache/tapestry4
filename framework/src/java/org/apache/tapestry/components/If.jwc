<?xml version="1.0" encoding="UTF-8"?>
<!-- 
   Copyright 2005 The Apache Software Foundation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<!DOCTYPE component-specification PUBLIC 
  "-//Apache Software Foundation//Tapestry Specification 4.0//EN" 
  "http://jakarta.apache.org/tapestry/dtd/Tapestry_4_0.dtd">

<component-specification class="org.apache.tapestry.components.IfBean" allow-body="yes" allow-informal-parameters="yes">
    
  <description>
  Conditionally emulates an element and its attributes and/or includes a block of content 
  if a condition is met.
  </description>
  
  <parameter name="condition" required="yes">
    <description>
    The condition to evaluate.
    </description>
  </parameter>
  
  <parameter name="conditionValue">
    <description>
    The value of the condition. During render this is obtained from
    the condition parameter. During rewind it is the submitted condition.
    </description>
  </parameter>

  <parameter name="listener"/>
  
  <parameter name="formless" default-value="false">
    <description>
    Determines whether to avoid creating hidden fields within a form.
    </description>
  </parameter>
  
  <parameter name="element" default-value="templateTag">
  	<description>
  	The element to emulate.
  	</description>
  </parameter>
  
  <parameter name="templateTag" default-value="null">
    <description>
    The tag with which the component was inserted in its parent template
    This parameter will be bound automatically by the framework.
    </description>
  </parameter>
  
  <property name="name"/>
  <property name="form"/>

  <inject property="dataSqueezer" object="service:tapestry.data.DataSqueezer"/>
  <inject property="listenerInvoker" object="infrastructure:listenerInvoker"/>
    
</component-specification>
