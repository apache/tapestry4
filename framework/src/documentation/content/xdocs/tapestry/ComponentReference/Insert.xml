<?xml version="1.0"?>
<!-- 
   Copyright 2004, 2005 The Apache Software Foundation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.2//EN" "./dtd/document-v12.dtd"
[
	<!ENTITY projectroot '../../'>
	<!ENTITY % links.ent SYSTEM "../../links.ent">
	%links.ent;
]>
<document>
  <header>
    <title>Insert</title>
  </header>
  
  <body>

<p> Allows for the insertion of text (with a specified format) into the HTML response. The text itself can be filtered 
  or not. When filtering is enabled (the default), certain characters (such as &lt; and &gt;) are escaped into HTML 
  safe representations (such as &amp;lt; and &amp;gt;). </p>

<p>
  <strong>See also:</strong> <link href="&apiroot;/components/Insert.html">org.apache.tapestry.components.Insert</link>, 
  &Conditional;, &Foreach;, &RenderBlock;, &InsertText;, &RenderBody;
</p>

<section>
  <title>Parameters</title>
  
<table>
  <tr> 
    <th>Name</th>
    <th>Type</th>
	  <th>Direction</th>
    <th>Required</th> 
    <th>Default</th>
    <th>Description</th>
  </tr>
  <tr>
    <td>value</td>
    <td>Object</td>
    <td>in</td>
   	<td>no</td>
		<td>&nbsp;</td>
		<td>The value to be inserted. If the binding is null, then nothing is 
    inserted. Any object may be inserted, the <code>toString()</code> method is 
    used to convert it to a printable value.
		</td>
	</tr>
  <tr>
 		<td>format</td>
		<td>
     <link href="http://java.sun.com/products/jdk/1.2/docs/api/java/text/Format.html">Format</link>
    </td>
		<td>in</td>
		<td>no</td>
		<td>&nbsp;</td>
		<td>An optional format object used to convert the value parameter for 
    insertion into the HTML response. 
		</td>
	</tr>
  <tr>
 		<td>class</td>
		<td>String</td>
		<td>in</td>
		<td>no</td>
		<td>&nbsp;</td>
		<td>If specified, then the output is wrapped in an HTML &lt;span&gt; tag, 
    using the value specified as the CSS class. 
    
    <p>
    Informal parameters are only rendered if a class is specified.	
    </p>
		</td>
	</tr>
  <tr>
 		<td>raw</td>
		<td>boolean</td>
		<td>in</td>
		<td>no</td>
		<td>false</td>
		<td>If true, then the method 
    <link href="&apiroot;/IMarkupWriter.html#printRaw(java.lang.String)">
    <code>IMarkupWriter.printRaw(String)</code></link> is used, rather than 
    <link href="&apiroot;/IMarkupWriter.html#print(java.lang.String)">
    <code>IMarkupWriter.print(String)</code></link>.
    
    <p>This bypasses the normal safeguards 
                  and is used when the value to insert contains HTML markup that 
                  should be emitted as is.</p>          
              		
    </td>
	</tr>
	</table>
  
<p>
  Body: <strong>removed</strong>
</p>  

<p>
  Informal parameters: <strong>allowed</strong>
</p>

<p>
  Reserved parameters: <em>none</em>
</p>

</section>

<section>
  <title>Examples</title>


	<p>
	Inserts the pages dueDate and applies the specified DateFormat and HTML class.  Example output:
  </p>

<source><![CDATA[
<table class="examples" cellpadding="8">
<tr>
 <td>
 The order was due on the <span class="overdue">21 January 2002</span>. 	
 </td>
</tr>
</table>
]]>
</source>

<section>
  <title>HTML template</title>
  
<source><![CDATA[
<table class="examples" cellpadding="8">
<tr>
 <td>
 The order was due on the <font color="red"><b>
 <span jwcid="@Insert" value="ognl:date" format="ognl:@EnquiryPage@DATE_FORMAT" class="ognl:dueClass">21 January 2002</span>. 	
 </td>
</tr>
</table>
]]></source>
  
<p>
This will extract the date and dueClass properties from the page. It will also obtain the DATE_FORMAT public static variable, and use
that to format the date before inserting it.
</p>  
  
</section>

<section>
  <title>Java class</title>
  
<source>
public abstract class EnquiryPage extends BasePage 
{
  public static final SimpleDateFormat DATE_FORMAT = new SimpleDateFormat("dd MMM yyyy");

  public abstract Date getDueDate();

  public abstract String getDueClass();
}
</source>
</section>
</section>
</body>
</document>