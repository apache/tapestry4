<?xml version="1.0"?>
<!-- 
   Copyright 2004, 2005 The Apache Software Foundation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.2//EN" "./dtd/document-v12.dtd"
[
	<!ENTITY projectroot '../../'>
	<!ENTITY % links.ent SYSTEM "../../links.ent">
	%links.ent;
]>
<document>
  <header>
    <title>ActionLink</title>
  </header>

  <body>

<p> Creates an &lt;a&gt; hyperlink in the HTML response. If the link is triggered, then the ActionLink retrieves its listener, and invokes actionTriggered() on it.
</p>
<p>See the Developers Guide ActionLink and DirectLink listeners for a more complete description.</p>

<p>
  <strong>See also: &DirectLink;, &ExternalLink;, &GenericLink;, &PageLink;, &ServiceLink;</strong>

</p>

<section>
  <title>Parameters</title>

<table>
  <tr>
    <th>Name</th>
    <th>Type</th>
	  <th>Direction</th>

    <th>Required</th>
    <th>Default</th>
    <th>Description</th>
  </tr>
  <tr>
    <td>listener</td>
    <td>&IActionListener;</td>

    <td>in</td>
    <td>yes</td>
    <td></td>
    <td>
      Specifies an object that is notified when the link is clicked, which is typically a listener
      method of its container (for example, listeners.<em>method</em>).
    </td>
  </tr>

  <tr>
    <td>disabled</td>
    <td>boolean</td>
    <td>in</td>
    <td>no</td>
    <td>false</td>

    <td>
      Controls whether the link is produced. If disabled, the portion of the template the
      link surrounds is still rendered, but not the link itself.
    </td>
  </tr>
  <tr>
    <td>stateful</td>
    <td>boolean</td>
    <td>in</td>

    <td>no</td>
    <td>true</td>
    <td>
      If true (the default), then the component requires an active (i.e., non-new) HttpSession when
      triggered. Failing that, it throws a &StaleLinkException;. If false, then no check is necessary.
      The latter works well with links that encode all necessary state inside the URL itself.
    </td>
  </tr>
  <tr>
    <td>anchor</td>

    <td>String</td>
    <td>in</td>
    <td>no</td>
    <td></td>
    <td>
      The name of an anchor or element to link to. The final URL will have '#' and the anchor appended to it.
    </td>

  </tr>
  
  <tr>
    <td>scheme</td>
    <td>String</td>
    <td>in</td>
    <td>no</td>
    <td></td>
    <td>
      The required scheme ("http" or "https", typically) for the URL.  This will force the creation
      of an absolute URL when the current request's scheme does not match the value for this parameter.
      This is most often used to switch to "https" for secure portions of an application
      (such as a login page), before switching back to standard "http" for the majority of an application.
    </td>
  </tr>
  
  <tr>
    <td>renderer</td>
    <td>&ILinkRenderer;</td>
    <td>in</td>
    <td>no</td>
    <td></td>

    <td>
      The object which will actually render the link.
    </td>
  </tr>
	</table>

<p>
  Body: <strong>rendered</strong>
</p>

<p>

  Informal parameters: <strong>allowed</strong>
</p>

<p>
  Reserved parameters: <em>href</em>
</p>

</section>

<section>
  <title>Examples</title>

  <p>
In this example the ActionLink component enables users to select a Customer from the Customer List table.
</p>

<figure src="&projectroot;/images/tapestry/ComponentReference/ActionLink.png" alt="ActionLink Screen Shot"/>


<p>HTML template</p>
<source><![CDATA[
  <table cellspacing="6">
  <tr>
   <td>ID</td>
   <td>&nbsp;</td>
   <td>Name</td>
   <td>&nbsp;</td>
   <td>Level</td>
  </tr>
  <tr>
   <td colspan="5"><hr></td>
  </tr>
  <tr jwcid="@Foreach" source="ognl:customerList" value="ognl:customer" element="tr">
   <td><span jwcid="@Insert" value="ognl:customer.id"/></td>
   <td>&nbsp;</td>
   <td><span jwcid="@ActionLink" listener="listener:customerSelectAction"> <span jwcid="@Insert" value="ognl:customer.fullName"/> </span></td>
   <td>&nbsp;</td>
   <td><span jwcid="@Insert" value="ognl:customer.memberLevel"/></td>
  </tr>
</table>
]]></source>

<p>Page specification</p>
<source><![CDATA[
<property name="customerList" type="java.util.List" persistent="yes"/>
<property name="customer" type="Customer"/>
]]></source>

<p>Java sources</p>
<source><![CDATA[
public abstract class SalesPage extends BasePage {
    public abstract List getCustomerList();
    public abstract List setCustomerList(List value);

    public abstract Customer getCustomer();

    public void customerSelectAction(IRequestCycle cycle) {
       Customer customer = getCustomer();
       // Do something with customer
    }
}
]]></source>

<source><![CDATA[
public class Customer implements Serializable {
    private Integer id;
    private String fullName;
    private String memberLevel;

    public Customer(Integer id, String fullName, String memberLevel) {
        this.id = id;
        this.fullName = fullName;
        this.memberLevel = memberLevel;
    }

    public Integer getId() { return id; }

    public String getFullName() { return fullName; }

    public String getMemberLevel() { return memberLevel; }
}
]]></source>
</section>

</body>
</document>