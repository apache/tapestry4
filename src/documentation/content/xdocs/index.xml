<?xml version="1.0"?>
<!-- 
   Copyright 2004, 2005 The Apache Software Foundation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.2//EN" "./dtd/document-v12.dtd" [

<!ENTITY % links.ent SYSTEM "./links.ent">
%links.ent;
]>
<document>

 <header>
  <title>Jakarta Tapestry</title>
 </header>

<body>
		
<p>
Tapestry is a powerful, open-source, all-Java framework
for creating leading edge web applications in Java.
</p>

<p>
Tapestry reconceptualizes web application development 
in terms of objects, methods and properties
instead of URLs and query parameters. It allows you to build sophisticated, richly interactive, highly scalable
web applications without any concern for HTTP ... or even the Servlet API!  Tapestry takes over all the tedious 
and error-prone aspects of web application development, letting you focus on just the parts specific to your
application.
</p>

<p>
Tapestry is an alternative to scripting environments such as
JavaServer Pages or Velocity.  Tapestry goes far further,
providing a complete framework for creating extremely dynamic applications
with minimal amounts of coding.
</p>

<p>
Tapestry's approach, using a component object model similar to a
traditional GUI, provides the following benefits:
</p>

<ul>
<li>Very high level of reuse, within and between projects
  <p><em>Everything in Tapestry is a reusable component</em></p></li>
<li>Frees developers from writing boring, buggy code
  <p><em>Code in terms of objects, methods and properties, not URLs and query parameters</em></p></li>
<li>Allows applications' complexity to scale well
  <p><em>Framework does all the URL building and message dispatching, transparently</em></p></li>
<li>Easy Internationalization/Localization
  <p><em>Framework selects localized version of text, templates and images</em></p></li>
  
<li>Extremely robust applications
  <p><em>Less code is less bugs<br/>Sophisticated built-in exception reporting<br/><link href="faq.html#lineprecise">Line precise error reporting</link></em></p></li>
  
<li>Easy team integration
  <p><em>Graphic designers and Java developers can work together without having to know each other's jobs</em></p></li>
</ul>

<p>
Tapestry has been developed using the guiding principals of <strong>Simplicity</strong>,
<strong>Consistency</strong>, <strong>Efficiency</strong> and
<strong>Feedback</strong>. Tapestry is focused on improving developer productivity; the goal of Tapestry is to
ensure that, when developing your applications, <em>the simplest approach is also the <strong>correct</strong> approach</em>.
</p>

<p>
Tapestry is distributed under the terms of the Apache Software License. It can be freely used, shared and modified with minimal
constraints.
</p>

<section>
  <title>Tapestry 4.0</title>
  
<p>
Tapestry 4.0 is just overflowing with new features aimed at further enhancing 
your productivity. Here's a few of our favorites:
</p>  

<ul>
  <li>
  The new 4.0 specification DTDs have been simplified.    
  </li>
  <li>
    The syntax used for binding parameters inside an HTML template and inside
    an XML specification is now consistent. Both make use of the binding prefixes.
  </li>
  <li>
    "Friendly" URLs (that is, URLs that pack more information into the path and less into query
    parameters) are built in. This makes it easy to divide your application across many folders (reducing
    clutter),
    and leverage J2EE declarative security along the way.
  </li>
  <li>
    Component parameters now <em>just work</em>, without having to worry about
    "direction". 
  </li>
  <li>
    Applications can now have a global message catalog, in addition to per-page and per-component
    message catalogs. Messages not found in the component message catalog are searched for in the 
    application catalog.
  </li>
  <li>
    Full, native support for <link href="tapestry-portlet/index.html">developing JSR-168 Portlets</link> has been added.
  </li>
  <li>
    Tapestry 4.0 makes much less use of reflection and &OGNL; than Tapestry 3.0; partly
    because there are many new <link href="UsersGuide/bindings.html">binding prefixes</link>.
  </li>
  <li>
   HiveMind services and &Spring; beans to be directly injected
    into page and component classes.
  </li>
  <li>
    Tapestry 4.0 includes optional <link href="tapestry-annotations/index.html">JDK 1.5 annotation support</link> 
    (but Tapestry still works with <link href="dependencies.html">JDK 1.3</link>).
  </li>
  <li>
    Tapestry 4.0 debuts a new and much more sophisticated user input validation subsystem.  Thanks Paul!
  </li>
  <li>
    Line precise error reporting can now display the contents of files containing errors.
  </li>
  <li>
    Forms can now be canceled, bypassing client-side validation logic, and invoking an  alternate
    listener on the server-side.
  </li>
  <li>
    You are no longer limited to just Global and Visit; you can have 
    <link href="UsersGuide/state.html#state.aso">application state objects</link> as you like.
  </li>
  <li>
    The use of &HiveMind; under the covers means that Tapestry can be easily customized to fit your needs.
  </li>
  <li>
    Page properties can now be persisted on the client, as well as in the session.
  </li>
</ul>

<p>
The complete list of changes is almost too numerous to list.  Suffice to say, everything is about
getting more bang for less work, and reducing the amount of Java code, reducing the complexity
of templates, and simplifying (or eliminating) XML files.
</p>

</section>

<section>
  <title>Status</title>
  
<p>
Work on Tapestry 4.0 is in full swing.  Documentation is being converted
from the old DocBook format, to the new Forrest format, leaving many temporary gaps. Only the 
main code base and the Workbench example is being built, all other example code is not (this unfortunately
includes the Virtual Library).
</p>

<p>
Tapestry 4.0 should be production-ready soon.  It needs more exposure and more documentation. For the
momement, it is still recommended that you stick with Tapestry <strong>3.0.3</strong>,
the latest stable release.
</p>
  
</section>

<section>
		<title>Tapestry in Print</title>


<figure src="images/tapestry-in-action.png" alt="Tapestry in Action Cover"/> 
<p>
	Tapestry in Action
is now available from
<link href="http://www.manning.com/lewisship/index.html">Manning Publications</link>. It is the
definitive introduction to Tapestry written by Howard Lewis Ship, the creator of Tapestry. Tapestry In Action
covers Tapestry 3.0, but is still broadly useful in the wake of the 4.0 release.
</p>

<figure src="images/tapestry-german-cover.gif" alt="Tapestry Webanwendungen mit dem Apache Framework"/>

<p>
<link href="http://entwickler.com/sus/sus_buch/psecom,id,60,nodeid,8,_language,uk.html">Tapestry Webanwendungen mit dem Apache Framework</link> is a fast-paced guide to using
Tapestry, focusing on combining Tapestry with other open-source frameworks, as well as developing Tapestry applications using
<link href="http://spindle.sourceforge.net/">Spindle</link>. The book is written in German, and authored by
Stefan Edlich and Patrick Kunert.  Covers Tapestry 3.0.
</p>

<p>Tapestry has also  been described in the print journal 
<em>The Java Report</em> in the September 2001 issue.  Other articles
includes the on-line journal
<link href="http://www.onjava.com/pub/a/onjava/2001/11/21/tapestry.html">OnJava</link>,
in November 2001.
</p>

</section>

<section>
		<title>Tapestry Community</title>


<p>
Tapestry has a very active 
<link href="mailto:tapestry-user-subscribe@jakarta.apache.org">User</link> mailing list, with
<link href="http://news.gmane.org/thread.php?group=gmane.comp.java.tapestry.user">archives</link>.
This is the list for getting help with using the framework.
</p>

<p>
The <link href="mailto:tapestry-dev-subscribe@jakarta.apache.org">Developer</link>
mailing list is for Tapestry committers and other power users to discuss
enhancements to the framework.  It also has 
<link href="http://news.gmane.org/thread.php?group=gmane.comp.jakarta.tapestry.devel">archives</link>.

</p>

<p>
A <link href="site:wiki">Wiki</link> has been set 
up to discuss Tapestry and plan new features, as well as provide a list
of <link href="http://wiki.apache.org/jakarta-tapestry/TapestryTutorials">Tapestry tutorials.</link>
</p>

</section>

</body>
</document>
