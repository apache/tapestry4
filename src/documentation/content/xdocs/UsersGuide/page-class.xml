<?xml version="1.0" encoding="utf-8"?>
<!-- 
   Copyright 2005 The Apache Software Foundation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.2//EN" "./dtd/document-v12.dtd"
[
	<!ENTITY projectroot '../'>
	<!ENTITY % links.ent SYSTEM "../links.ent">
  <!ENTITY % common.ent SYSTEM "common.ent">
	%links.ent;
  %common.ent;
]>
<document>
  <header>
    	<title>Determining the Page Class</title>
  </header>

<body>
<p>
  When it comes time for Tapestry to instantiate a page, it must identify the Java class
  to instantiate.
</p>

<p>
Tapestry pages implement the &IPage; interface.  Because this is a large interface,
you will typically extends the &BasePage; base class (for HTML pages).
</p>

<p>
Typically, you will identify the page class within the page's specification, using
the &spec.page-specification; element's class attribute.
</p>

<p>
In many cases, however, the page specification is optional.  Alternately, the class
attribute may be omitted from the page specification.  Tapestry takes the following steps
to find the class for a page:
</p>

<ul>
  <li>As indicated in the page specification</li>
  <li>By searching the packages listed in the application specification (more below)</li>
  <li>The application specification's org.apache.tapestry.default-page-class property</li>
  <li>The global property org.apache.tapestry.default-page-class</li>
</ul>

<p>
The most useful of these is the second option, to search.  For this step,
Tapestry looks in the application specification
for the org.apache.tapestry.page-class-packages &spec.meta; property. This
is a comma-seperated list of package names to search.  The list of packages is
optional, and the default Java package is searched last.
</p>

<p>
Also, for this search, the page name is converted into a partial class name. For pages
inside folders, the folder names are part of the package name, so page name
<code>admin/EditUser</code> will be become <code>admin.EditUser</code>.
</p>

<p>
So, if the prefix list is <code>org.example.pages</code>, then Tapestry will search
for <code>org.example.pages.admin.EditUser</code>, then
<code>admin.EditUser</code> (that is, in the default package).
</p>

<p>
Only if those searches fail to locate a class  does Tapestry continue to the next steps, using
default page class names in the application specification and beyond.
</p>

<note>
These steps are specified in the
<link href="&hivedoc;/config/tapestry.page.PageClassProviderChain.html">tapestry.page.PageClassProviderChain</link>
configuration point.
</note>

<p>
For simplicity, we described the search for application pages. For pages within a library, the process
is the same, but it is the library's specification which is searched for the list of packages,
and later, for the default page class name.
</p>

<section id="page-class.component">
  <title>Component Classes</title>
  
<p>
A similar search occurs for components (again, with the express desire that the class attribute of the
&spec.component-specification; <em>not</em> be used).  
</p>

<ul>
  <li>As defined by the component specification</li>
  <li>In any package defined by the containing namespace's org.apache.tapestry.component-class-packages
    meta data property (if any)</li>
  <li>In the default package</li>
  <li>&BaseComponent; is the final default</li>
</ul>

<note>
These steps are specified in the
<link href="&hivedoc;/config/tapestry.page.ComponentClassProviderChain.html">tapestry.page.ComponentClassProviderChain</link>
configuration point.
</note>
</section>

</body>
</document>