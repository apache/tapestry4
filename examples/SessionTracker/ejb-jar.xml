<?xml version="1.0"?>

<!-- $Id$ -->

<!DOCTYPE ejb-jar PUBLIC
"-//Sun Microsystems, Inc.//DTD Enterprise JavaBeans 1.1//EN"
"http://java.sun.com/j2ee/dtds/ejb-jar_1_1.dtd">

<ejb-jar>
    <enterprise-beans>
    
      <entity>

	<description>The SessionTracker entity is used to track requests for a single
    HTTP Session.  It records a series of 'hits' that enapsulate critical request
    information (time, method, receiving server, URI and query parameters).  These
    are recorded in a database and are retrievable at a later date.
    </description>
    
    <display-name>SessionTracker</display-name>
    
	<ejb-name>SessionTracker</ejb-name>

	<home>com.primix.sesstrack.ISessionTrackerHome</home>
	<remote>com.primix.sesstrack.ISessionTracker</remote>

	<ejb-class>com.primix.sesstrack.SessionTracker</ejb-class>

	<persistence-type>Bean</persistence-type>

	<prim-key-class>java.lang.String</prim-key-class>
    
    <reentrant>False</reentrant>
    
	<resource-ref>
    	<description>A database into which the SessionTracker can store and retrieve
        information about sessions, hits and parameters.</description>
        
        <res-ref-name>jdbc/sessiondb</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>


     </entity>
    </enterprise-beans>

    <assembly-descriptor>
      <container-transaction>

	<method>
	  <ejb-name>SessionTracker</ejb-name>
	  <method-name>*</method-name>
	</method>

	<!-- May break this down in the future, but this makes sense for us.  The container
    	 will start a transaction before each method invocation, and commit it after. -->
         
	<trans-attribute>RequiresNew</trans-attribute>
      </container-transaction>
    </assembly-descriptor>

  </ejb-jar>
